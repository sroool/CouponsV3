{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/addcompany/addcompany.component.ts","./src/app/components/addcompany/addcompany.component.html","./src/app/components/addcoupon/addcoupon.component.ts","./src/app/components/addcoupon/addcoupon.component.html","./src/app/components/addcustomer/addcustomer.component.ts","./src/app/components/addcustomer/addcustomer.component.html","./src/app/components/adminhome/adminhome.component.ts","./src/app/components/adminhome/adminhome.component.html","./src/app/components/allcompanies/allcompanies.component.ts","./src/app/components/allcompanies/allcompanies.component.html","./src/app/components/allcustomers/allcustomers.component.ts","./src/app/components/allcustomers/allcustomers.component.html","./src/app/components/companyhome/companyhome.component.ts","./src/app/components/companyhome/companyhome.component.html","./src/app/components/companyprofile/companyprofile.component.ts","./src/app/components/companyprofile/companyprofile.component.html","./src/app/components/coupon/coupon.component.ts","./src/app/components/coupon/coupon.component.html","./src/app/components/couponbycategory/couponbycategory.component.ts","./src/app/components/couponbycategory/couponbycategory.component.html","./src/app/components/customerhome/customerhome.component.ts","./src/app/components/customerhome/customerhome.component.html","./src/app/components/customerprofile/customerprofile.component.ts","./src/app/components/customerprofile/customerprofile.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/loading/loading.component.ts","./src/app/components/loading/loading.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/minicoupon/minicoupon.component.ts","./src/app/components/minicoupon/minicoupon.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/pagenotfound/pagenotfound.component.ts","./src/app/components/pagenotfound/pagenotfound.component.html","./src/app/models/category.enum.ts","./src/app/models/company.ts","./src/app/models/coupon.ts","./src/app/models/customer.ts","./src/app/services/admin.service.ts","./src/app/services/category.guard.ts","./src/app/services/client-type.enum.ts","./src/app/services/company.service.ts","./src/app/services/customer.service.ts","./src/app/services/login.service.ts","./src/app/services/loginguard.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { LoginguardService } from './services/loginguard.service';\r\nimport { AllcompaniesComponent } from './components/allcompanies/allcompanies.component';\r\nimport { AllcustomersComponent } from './components/allcustomers/allcustomers.component';\r\nimport { CustomerprofileComponent } from './components/customerprofile/customerprofile.component';\r\nimport { CompanyprofileComponent } from './components/companyprofile/companyprofile.component';\r\nimport { CouponComponent } from './components/coupon/coupon.component';\r\nimport { PagenotfoundComponent } from './components/pagenotfound/pagenotfound.component';\r\nimport { LoadingComponent } from './components/loading/loading.component';\r\nimport { CouponbycategoryComponent } from './components/couponbycategory/couponbycategory.component';\r\nimport { CategoryGuard } from './services/category.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: \"\", redirectTo:\"home\",pathMatch:\"full\",canActivate : [LoginguardService]},\r\n  {path: \"home\", component: HomeComponent, canActivate : [LoginguardService]},\r\n  {path: \"login\", component: LoginComponent},\r\n  {path: \"all-companies\", component:AllcompaniesComponent, canActivate: [LoginguardService]},\r\n  {path: \"all-customers\", component:AllcustomersComponent, canActivate: [LoginguardService]},\r\n  {path: \"customer-profile\", component:CustomerprofileComponent, canActivate: [LoginguardService]},\r\n  {path: \"company-profile\", component:CompanyprofileComponent, canActivate: [LoginguardService]},\r\n  {path: \"loading/:id\", component: LoadingComponent, canActivate: [LoginguardService]},\r\n  {path: \"coupon/:id\", component: CouponComponent, canActivate: [LoginguardService]},\r\n  {path: \"category/:category\",component:CouponbycategoryComponent, canActivate: [LoginguardService,CategoryGuard]},\r\n  { path: \"not-found\" , component:PagenotfoundComponent},\r\n  {path: \"**\", component:PagenotfoundComponent },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'CouponsV3';\r\n}\r\n","<div class=\"container\">\r\n  <nav>\r\n    <app-navbar></app-navbar>\r\n  </nav>\r\n  <main>\r\n    <router-outlet></router-outlet>\r\n  </main>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\r\n\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\"\r\nimport { MatTabsModule} from '@angular/material/tabs';\r\nimport { MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\r\n\r\n\r\nimport { AllcompaniesComponent } from './components/allcompanies/allcompanies.component';\r\nimport { AllcustomersComponent } from './components/allcustomers/allcustomers.component';\r\nimport { AddcompanyComponent } from './components/addcompany/addcompany.component';\r\nimport { AddcustomerComponent } from './components/addcustomer/addcustomer.component';\r\nimport { CustomerprofileComponent } from './components/customerprofile/customerprofile.component';\r\nimport { CompanyprofileComponent } from './components/companyprofile/companyprofile.component';\r\nimport { AddcouponComponent } from './components/addcoupon/addcoupon.component';\r\nimport { CustomerhomeComponent } from './components/customerhome/customerhome.component';\r\nimport { CompanyhomeComponent } from './components/companyhome/companyhome.component';\r\nimport { AdminhomeComponent } from './components/adminhome/adminhome.component';\r\nimport { CouponComponent } from './components/coupon/coupon.component';\r\nimport { PagenotfoundComponent } from './components/pagenotfound/pagenotfound.component';\r\nimport { MinicouponComponent } from './components/minicoupon/minicoupon.component';\r\nimport { LoadingComponent } from './components/loading/loading.component';\r\nimport { CouponbycategoryComponent } from './components/couponbycategory/couponbycategory.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n  \r\n    AllcompaniesComponent,\r\n    AllcustomersComponent,\r\n    AddcompanyComponent,\r\n    AddcustomerComponent,\r\n    \r\n    CustomerprofileComponent,\r\n    CompanyprofileComponent,\r\n    AddcouponComponent,\r\n    CustomerhomeComponent,\r\n    CompanyhomeComponent,\r\n    AdminhomeComponent,\r\n    CouponComponent,\r\n    PagenotfoundComponent,\r\n    MinicouponComponent,\r\n    LoadingComponent,\r\n    CouponbycategoryComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule, \r\n    FormsModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatSnackBarModule,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatAutocompleteModule\r\n\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { Company } from 'src/app/models/company';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-addcompany',\r\n  templateUrl: './addcompany.component.html',\r\n  styleUrls: ['./addcompany.component.css']\r\n})\r\nexport class AddcompanyComponent implements OnInit {\r\n  visibility = \"visibility\";\r\n  type = \"password\";\r\n  title = \"Add Company\";\r\n  disableDeleteButton = false;\r\n  newCompany : FormGroup;\r\n  constructor(private fb : FormBuilder, private adminService : AdminService, \r\n              private snackBar : MatSnackBar, private dialog : MatDialogRef<AddcompanyComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public company : Company) { }\r\n\r\n  ngOnInit(): void {\r\n    this.newCompany = this.fb.group({\r\n      id: [{value:\"\",disabled:true},[]],\r\n      name: [\"\",[Validators.required]],\r\n      email: [\"\", [Validators.required,Validators.email]],\r\n      password: [\"\", [Validators.required]],\r\n      confirmp : [\"\",[Validators.required, this.validatePasswordsMatch]]\r\n    });\r\n    if(this.company){\r\n      this.newCompany.setValue({id : this.company._id,name: this.company._name, email: this.company._email,\r\n                                password: this.company._password,confirmp:this.company._password});\r\n      this.name.disable();\r\n      this.title = \"Update Company\";\r\n    }\r\n  }\r\n  saveCompany(){\r\n    if(this.company){\r\n      this.updateCompany();\r\n    }else{\r\n      this.addCompany()\r\n    }\r\n  }\r\n  deleteCompany(){\r\n    this.newCompany.disable();\r\n    this.disableDeleteButton=true;\r\n    this.adminService.deleteCompany(this.id.value).subscribe(\r\n      success => {\r\n        const snackRef = this.snackBar.open(\"Company Deleted Successfuly!\",\"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      },\r\n      error => {\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0){\r\n          errorMessage = \"oops, try again later\", \"dismiss\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n        this.newCompany.enable()\r\n        this.disableDeleteButton = false;\r\n      }\r\n    )\r\n  }\r\n  addCompany(){\r\n    this.newCompany.disable();\r\n    const company : Company = new Company(0,this.name.value,this.email.value,this.password.value) ;\r\n    this.adminService.addCompany(company).subscribe(\r\n      success =>{\r\n        const snackRef = this.snackBar.open(\"New Company Succesfully added!\",\"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      }, error => {\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0){\r\n          errorMessage = \"oops, try again later\", \"dismiss\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.newCompany.enable()\r\n        })\r\n\r\n      }\r\n    )\r\n  }\r\n  updateCompany(){\r\n    this.newCompany.disable();\r\n    this.disableDeleteButton = true;\r\n    const company : Company = new Company(this.id.value,this.name.value,this.email.value,this.password.value,this.company._coupons) ;\r\n    this.adminService.updateCompany(company).subscribe(\r\n      success =>{\r\n        const snackRef = this.snackBar.open(\"Company Succesfully Updated!\",\"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      }, error => {\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0){\r\n          errorMessage = \"oops, try again later\", \"dismiss\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n\r\n          this.newCompany.enable()\r\n          this.disableDeleteButton=false;\r\n        })\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  close(){\r\n    this.dialog.close();\r\n  }\r\n  validatePasswordsMatch(control : AbstractControl){\r\n    \r\n    const password : string = control.parent?.get(\"password\").value;\r\n    const confirmPassword : string = control.value;\r\n    if(password != confirmPassword){\r\n      return {passwordsMatchError : true}\r\n    }\r\n  }\r\n  showPassword(){\r\n    if(this.type == \"password\"){\r\n      this.type = \"text\";\r\n      this.visibility = \"visibility_off\"\r\n    }else{\r\n      this.type = \"password\";\r\n      this.visibility = \"visibility\";\r\n    }\r\n  }\r\n  get id(){\r\n    return this.newCompany.controls['id'];\r\n  }\r\n  get name(){\r\n    return this.newCompany.controls['name'];\r\n  }\r\n  get email(){\r\n    return this.newCompany.controls['email'];\r\n  }\r\n  get password(){\r\n    return this.newCompany.controls['password'];\r\n  }\r\n  get confirmp(){\r\n    return this.newCompany.controls['confirmp'];\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div >\r\n        <mat-toolbar color=\"accent\">\r\n            <h2>{{title}}</h2>\r\n            <span class=\"fill-toolbar\"></span>\r\n            <button mat-icon-button (click)=\"close()\"><mat-icon>cancel</mat-icon></button>\r\n        </mat-toolbar>\r\n        <form [formGroup]=\"newCompany\">\r\n            <mat-form-field *ngIf=\"company\">\r\n                <mat-label>ID</mat-label>\r\n                <input matInput formControlName=\"id\">\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Company Name</mat-label>\r\n                <input matInput placeholder=\"Name\" formControlName=\"name\" />\r\n                <mat-error *ngIf=\"name.errors?.required\">Name is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Email</mat-label>\r\n                <input matInput type=\"email\" placeholder=\"e.g. Boba@Bola.com\" formControlName=\"email\" />\r\n                <mat-error *ngIf=\"email.errors?.required\">Email is required</mat-error>\r\n                <mat-error *ngIf=\"email.errors?.email\">Invalid email</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Password</mat-label>\r\n                <input matInput [type]=\"type\" placeholder=\"your password\" formControlName=\"password\" />\r\n                <button mat-icon-button matSuffix (click)=\"showPassword()\"><mat-icon>{{visibility}}</mat-icon></button>\r\n                <mat-error>Password is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Confirm Password</mat-label>\r\n                <input matInput [type]=\"type\" placeholder=\"confirm your password\" formControlName=\"confirmp\" />\r\n                <mat-error>Password is required</mat-error>\r\n                <mat-error *ngIf=\"confirmp.errors?.passwordsMatchError\">Passwords need to match</mat-error>\r\n\r\n            </mat-form-field>\r\n            \r\n            <button mat-raised-button [disabled]=\"!newCompany.valid\" (click)=\"saveCompany()\">{{title}}</button>\r\n            <button mat-raised-button [disabled]=\"disableDeleteButton\" (click)=\"deleteCompany()\" *ngIf=\"company\">Delete Company</button>\r\n        </form>\r\n    </div>\r\n    </div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\nimport { CompanyService } from 'src/app/services/company.service';\r\nimport { Coupon } from 'src/app/models/coupon';\r\nimport { Category } from 'src/app/models/category.enum';\r\nimport { Company } from 'src/app/models/company';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-addcoupon',\r\n  templateUrl: './addcoupon.component.html',\r\n  styleUrls: ['./addcoupon.component.css']\r\n})\r\nexport class AddcouponComponent implements OnInit {\r\n  header : string = \"Add Coupon\";\r\n  newCoupon : FormGroup;\r\n  disableDeleteButton = false;\r\n  companyId : number;\r\n  possibleCategories = Object.values(Category).filter(category => isNaN(+category));\r\n  constructor(private dialog : MatDialogRef<AddcouponComponent>,\r\n              private companyService : CompanyService,\r\n              private fb : FormBuilder, private snackBar : MatSnackBar,\r\n              @Inject(MAT_DIALOG_DATA) public coupon : Coupon) { }\r\n\r\n  ngOnInit(): void {\r\n    this.companyService.getCompanyDetails().subscribe(\r\n      success => {\r\n        this.companyId = Company.getCompany(success)._id;\r\n      },\r\n      error =>{\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0|| error.status == 500){\r\n          errorMessage = \"oops, try again later\", \"dismiss\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    )\r\n    this.newCoupon = this.fb.group({\r\n      title: [\"\",[Validators.required]],\r\n      category: [\"\",[Validators.required]],\r\n      description: [\"\",[Validators.required]],\r\n      startDate: [\"\",[Validators.required,this.validateStartDate]],\r\n      endDate: [\"\",[Validators.required,this.validateEndDate]],\r\n      amount: [\"\",[Validators.required,Validators.min(1)]],\r\n      price: [\"\",[Validators.required,Validators.min(1)]],\r\n      image: [\"\",[Validators.required]]\r\n    });\r\n    if(this.coupon){\r\n      this.newCoupon.setValue({title: this.coupon._title,category: this.coupon._category,\r\n                              description: this.coupon._description,startDate:this.coupon._startDate,\r\n                              endDate:this.coupon._endDate,amount:this.coupon._originalAmount,price:this.coupon._price,\r\n                              image:this.coupon._image});\r\n      this.header = \"Update Coupon\";\r\n      for(let control in this.newCoupon.controls){\r\n        this.newCoupon.controls[control].markAsTouched();\r\n      }\r\n    }\r\n  }\r\n  validateStartDate(control : AbstractControl){\r\n    const startDate = new Date(control.value);\r\n    const today = new Date();\r\n    const endDate = control.parent?.get(\"endDate\");\r\n    if(endDate && endDate.touched){\r\n      endDate.updateValueAndValidity();\r\n    }\r\n    if(startDate.getTime() < today.getTime()){\r\n      return {invalidStartDate:true};\r\n    }\r\n  }\r\n  validateEndDate(control : AbstractControl){\r\n    const startDate = new Date(control.parent?.get(\"startDate\").value);\r\n    const endDate = new Date(control.value);\r\n    if(startDate.getTime() > endDate.getTime()){\r\n      return {invalidEndDate:true};\r\n    }\r\n  }\r\n  close(){\r\n    this.dialog.close()\r\n  }\r\n  saveCoupon(){\r\n    if(this.coupon){\r\n      this.updateCoupon();\r\n    }else{\r\n      this.addCoupon();\r\n    }\r\n  }\r\n  addCoupon(){\r\n    this.newCoupon.disable();\r\n    const category : Category = this.category.value;\r\n    const coupon : Coupon = new Coupon(0, this.companyId,this.category.value,this.title.value,\r\n                                        this.description.value,this.startDate.value,this.endDate.value,\r\n                                        this.amount.value,this.amount.value,this.price.value,this.image.value);\r\n    this.companyService.addCoupon(coupon).subscribe(\r\n      success => {\r\n        const snackRef = this.snackBar.open(\"New Coupon added successfully\",\"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      },\r\n      error => {\r\n        let errorMessage : string = error.error;\r\n        if(error.status ==0 || error.status ==500){\r\n          errorMessage = \"Oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage,\"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.newCoupon.enable();\r\n        })\r\n      }\r\n    )\r\n  }\r\n  updateCoupon(){\r\n    this.newCoupon.disable();\r\n    this.disableDeleteButton = true;\r\n    const coupon : Coupon = new Coupon(this.coupon._id, this.companyId,this.category.value,this.title.value,\r\n                                        this.description.value,this.startDate.value,this.endDate.value,\r\n                                        this.amount.value,this.amount.value,this.price.value,this.image.value);\r\n    this.companyService.updateCoupon(coupon).subscribe(\r\n      success => {\r\n        const snackRef = this.snackBar.open(\"Coupon updated successfully\",\"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      },\r\n      error => {\r\n        let errorMessage : string = error.error;\r\n        if(error.status ==0 || error.status ==500){\r\n          errorMessage = \"Oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage,\"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.newCoupon.enable();\r\n          this.disableDeleteButton = false;\r\n        })\r\n      }\r\n    )\r\n  }\r\n  deleteCoupon(){\r\n    this.newCoupon.disable();\r\n    this.disableDeleteButton = true;\r\n    this.companyService.deleteCoupon(this.coupon._id).subscribe(\r\n      success => {\r\n        const snackRef = this.snackBar.open(success,\"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      },\r\n      error => {\r\n        let errorMessage = error.error;\r\n        if(error.status == 0 || error.status == 500){\r\n          errorMessage = \"Oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.newCoupon.enable();\r\n          this.disableDeleteButton = false;\r\n        })\r\n      }\r\n    )\r\n    \r\n  }\r\n  get id(){\r\n    return this.newCoupon.controls['id'];\r\n  }\r\n  get title(){\r\n    return this.newCoupon.controls['title'];\r\n  }\r\n  get description(){\r\n    return this.newCoupon.controls['description'];\r\n  }\r\n  get startDate(){\r\n    return this.newCoupon.controls['startDate'];\r\n  }\r\n  get endDate(){\r\n    return this.newCoupon.controls['endDate'];\r\n  }\r\n  get amount(){\r\n    return this.newCoupon.controls['amount'];\r\n  }\r\n  get price(){\r\n    return this.newCoupon.controls['price'];\r\n  }\r\n  get category(){\r\n    return this.newCoupon.controls['category'];\r\n  }\r\n  get image(){\r\n    return this.newCoupon.controls['image'];\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div>\r\n        <mat-toolbar color=\"accent\">\r\n            <h2>{{header}}</h2>\r\n            <span class=\"fill-toolbar\"></span>\r\n            <button mat-icon-button (click)=\"close()\">\r\n                <mat-icon>cancel</mat-icon>\r\n            </button>\r\n        </mat-toolbar>\r\n        <form [formGroup]=\"newCoupon\">\r\n\r\n            <mat-form-field>\r\n                <mat-label>Title</mat-label>\r\n                <input matInput placeholder=\"Title\" formControlName=\"title\" />\r\n                <mat-error>Title is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Category</mat-label>\r\n                <mat-select formControlName=\"category\">\r\n                    <mat-option *ngFor=\"let category of possibleCategories\" [value]=\"category\">\r\n                        {{category}}</mat-option>\r\n                </mat-select>\r\n                <mat-error>Category is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Description</mat-label>\r\n                <textarea matInput formControlName=\"description\"></textarea>\r\n\r\n                <mat-error>Description is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Start Date</mat-label>\r\n                <input matInput type=\"date\" (change)=\"validateEndDate(endDate)\" formControlName=\"startDate\" />\r\n\r\n                <mat-error *ngIf=\"startDate.errors?.required\">Start Date is required</mat-error>\r\n                <mat-error *ngIf=\"startDate.errors?.invalidStartDate\">Start Date must be in the future</mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <mat-label>End Date</mat-label>\r\n                <input matInput type=\"date\" formControlName=\"endDate\" />\r\n                <mat-error *ngIf=\"endDate.errors?.required\">End Date is required</mat-error>\r\n                <mat-error *ngIf=\"endDate.errors?.invalidEndDate\">End Date must be after Start Date</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Amount</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"amount\" />\r\n                <mat-error>Amount is required</mat-error>\r\n                <mat-error *ngIf=\"startDate.errors?.min\">Amount must be positive</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Price</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"price\" />\r\n                <mat-error>Price is required</mat-error>\r\n                <mat-error *ngIf=\"startDate.errors?.min\">Price must be positive</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Image</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"image\" />\r\n                <mat-error>Image is required</mat-error>\r\n            </mat-form-field>\r\n            <div class=\"actions\">\r\n                <button mat-raised-button [disabled]=\"!newCoupon.valid\" (click)=\"saveCoupon()\">{{header}}</button>\r\n                <button mat-raised-button [disabled]=\"disableDeleteButton\" (click)=\"deleteCoupon()\" *ngIf=\"coupon\">Delete Coupon</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\nimport { Admin } from 'src/app/models/admin';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Customer } from 'src/app/models/customer';\r\n\r\n@Component({\r\n  selector: 'app-addcustomer',\r\n  templateUrl: './addcustomer.component.html',\r\n  styleUrls: ['./addcustomer.component.css']\r\n})\r\nexport class AddcustomerComponent implements OnInit {\r\n  visibility = \"visibility\";\r\n  type = \"password\";\r\n  title = \"Add Customer\";\r\n  newCustomer : FormGroup;\r\n  disableDeleteButton = false;\r\n  constructor(private fb: FormBuilder, private adminService : AdminService,\r\n              private snackBar : MatSnackBar, private dialog : MatDialogRef<AddcustomerComponent>,\r\n              @Inject(MAT_DIALOG_DATA)public customer :Customer) { }\r\n\r\n  ngOnInit(): void {\r\n    this.newCustomer = this.fb.group({\r\n      id: [{value:\"\",disabled:true},[]],\r\n      fname : [\"\",[Validators.required]],\r\n      lname: [\"\",[Validators.required]],\r\n      email: [\"\",[Validators.required]],\r\n      password: [\"\",[Validators.required]],\r\n      confirmp: [\"\",[Validators.required, this.validatePasswordsMatch]]\r\n    })\r\n    if(this.customer){\r\n      this.newCustomer.setValue({id:this.customer._id,fname:this.customer._firstName,lname:this.customer._lastName,\r\n                                email: this.customer._email, password:this.customer._password,confirmp:this.customer._password});\r\n      this.title = \"Update Customer\";                          \r\n    }\r\n  }\r\n\r\n  validatePasswordsMatch(control : AbstractControl){\r\n    const password : string = control.parent?.get(\"password\").value;\r\n    const confirmPassword : string = control.value;\r\n    if(password != confirmPassword){\r\n      return {passwordMatchError: true};\r\n    }\r\n    \r\n  }\r\n  saveCustomer(){\r\n    if(this.customer){\r\n      this.updateCustomer();\r\n    }else{\r\n      this.addCustomer()\r\n    }\r\n  }\r\n  addCustomer(){\r\n    this.newCustomer.disable();\r\n    const customer : Customer = new Customer(0,this.fname.value,this.lname.value,this.email.value,this.password.value);\r\n    this.adminService.addCustomer(customer).subscribe(\r\n      success =>{\r\n        const snackRef = this.snackBar.open(\"New Customer added succesfully!\", \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      }, error =>{\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0 || error.status == 500){\r\n          errorMessage = \"oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.newCustomer.enable();\r\n        })\r\n      }\r\n    )\r\n  }\r\n  updateCustomer(){\r\n    this.newCustomer.disable();\r\n    this.disableDeleteButton = true;\r\n    const customer : Customer = new Customer(this.id.value,this.fname.value,this.lname.value,this.email.value,this.password.value, this.customer._coupons);\r\n    this.adminService.updateCustomer(customer).subscribe(\r\n      success =>{\r\n        const snackRef = this.snackBar.open(\"Customer updated succesfully!\", \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      }, error =>{\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0 || error.status == 500){\r\n          errorMessage = \"oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.newCustomer.enable();\r\n          this.disableDeleteButton = false;\r\n        })\r\n      }\r\n    )\r\n  }\r\n  deleteCustomer(){\r\n    this.newCustomer.disable();\r\n    this.disableDeleteButton = true;\r\n    this.adminService.deleteCustomer(this.id.value).subscribe(\r\n      success =>{\r\n        const snackRef = this.snackBar.open(\"Customer deleted succesfully\", \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      }, error =>{\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0 || error.status == 500){\r\n          errorMessage = \"oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.newCustomer.enable();\r\n          this.disableDeleteButton = false;\r\n        })\r\n      }\r\n    )\r\n  }\r\n  showPassword(){\r\n    if(this.type == \"password\"){\r\n      this.type = \"text\";\r\n      this.visibility = \"visibility_off\";\r\n    }else{\r\n      this.type = \"password\";\r\n      this.visibility = \"visibility\";\r\n    }\r\n  }\r\n  close(){\r\n    this.dialog.close();\r\n  }\r\n  get id(){\r\n    return this.newCustomer.controls['id'];\r\n  }\r\n  get fname(){\r\n    return this.newCustomer.controls['fname'];\r\n  }\r\n  get lname(){\r\n    return this.newCustomer.controls['lname'];\r\n  }\r\n  get email(){\r\n    return this.newCustomer.controls['email'];\r\n  }\r\n  get password(){\r\n    return this.newCustomer.controls['password'];\r\n  }\r\n  get confirmp(){\r\n    return this.newCustomer.controls['confirmp'];\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div >\r\n        <mat-toolbar color=\"accent\">\r\n            <h2>{{title}}</h2>\r\n            <span class=\"fill-toolbar\"></span>\r\n            <button mat-icon-button (click)=\"close()\"><mat-icon>cancel</mat-icon></button>\r\n        </mat-toolbar>\r\n        <form [formGroup]=\"newCustomer\">\r\n            <mat-form-field *ngIf=\"customer\">\r\n                <mat-label>ID</mat-label>\r\n                <input matInput formControlName=\"id\">\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>First Name</mat-label>\r\n                <input matInput placeholder=\"First Name\" formControlName=\"fname\" />\r\n                <mat-error *ngIf=\"fname.errors?.required\">First Name is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Last Name</mat-label>\r\n                <input matInput placeholder=\"Last Name\" formControlName=\"lname\" />\r\n                <mat-error *ngIf=\"lname.errors?.required\">Last Name is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Email</mat-label>\r\n                <input matInput type=\"email\" placeholder=\"e.g. Boba@Bola.com\" formControlName=\"email\" />\r\n                <mat-error *ngIf=\"email.errors?.required\">Email is required</mat-error>\r\n                <mat-error *ngIf=\"email.errors?.email\">Invalid email</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Password</mat-label>\r\n                <input matInput [type]=\"type\" placeholder=\"your password\" formControlName=\"password\" />\r\n                <button mat-icon-button matSuffix (click)=\"showPassword()\"><mat-icon>{{visibility}}</mat-icon></button>\r\n                <mat-error>Password is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Confirm Password</mat-label>\r\n                <input matInput [type]=\"type\" placeholder=\"confirm your password\" formControlName=\"confirmp\" />\r\n                <mat-error>Password is required</mat-error>\r\n                <mat-error *ngIf=\"confirmp.errors?.passwordsMatchError\">Passwords need to match</mat-error>\r\n\r\n            </mat-form-field>\r\n            \r\n            <button mat-raised-button [disabled]=\"!newCustomer.valid\" (click)=\"saveCustomer()\">{{title}}</button>\r\n            <button mat-raised-button [disabled]=\"disableDeleteButton\" (click)=\"deleteCustomer()\" *ngIf=\"customer\">Delete Customer</button>\r\n        </form>\r\n    </div>\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-adminhome',\r\n  templateUrl: './adminhome.component.html',\r\n  styleUrls: ['./adminhome.component.css']\r\n})\r\nexport class AdminhomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    \r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Company } from 'src/app/models/company';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { AddcompanyComponent } from '../addcompany/addcompany.component';\r\n\r\n@Component({\r\n  selector: 'app-allcompanies',\r\n  templateUrl: './allcompanies.component.html',\r\n  styleUrls: ['./allcompanies.component.css']\r\n})\r\nexport class AllcompaniesComponent implements OnInit {\r\n\r\n  companies : Company[];\r\n  dataSource;\r\n  search;\r\n  displayedColumns : string[] = [\"id\", \"name\", \"email\", \"password\", \"coupons\",\"actions\"];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator : MatPaginator;\r\n  constructor(private adminService : AdminService, private snackBar:MatSnackBar, private dialog : MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.adminService.getAllCompanies().subscribe(\r\n      success => {\r\n        const companies : Company[] = Company.getCompanies(success);\r\n        this.companies = companies;\r\n        this.dataSource = new MatTableDataSource(this.companies);\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n      }, error => {\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0){\r\n          errorMessage = \"oops, try again later\";\r\n        }\r\n        this.snackBar.open(errorMessage,\"dismiss\");\r\n      }\r\n    )\r\n  }\r\n  showCompany(company){\r\n    let config : MatDialogConfig = new MatDialogConfig();\r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"60%\";\r\n    config.data = company;\r\n    const dialogRef = this.dialog.open(AddcompanyComponent,config);\r\n    dialogRef.afterClosed().subscribe( result =>{\r\n      this.ngOnInit();\r\n    })\r\n    \r\n  }\r\n  addCompany(){\r\n    let config: MatDialogConfig = new MatDialogConfig();\r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"60%\";\r\n    const dialogRef = this.dialog.open(AddcompanyComponent,config);\r\n    dialogRef.afterClosed().subscribe( result =>{\r\n      this.ngOnInit();\r\n    })\r\n  }\r\n  filterSearch(){\r\n    this.dataSource.filter = this.search.trim().toLowerCase();\r\n  }\r\n  clearSearch(){\r\n    this.search = \"\";\r\n    this.filterSearch();\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"header\">\r\n        <h2>List of companies :</h2>\r\n        <h3 *ngIf=\"dataSource?.data\">{{dataSource.data.length}} companies</h3>\r\n    </div>\r\n    <section class=\"section\">\r\n        <button mat-raised-button (click)=\"addCompany()\">Add Company</button>\r\n        <mat-form-field>\r\n            <input matInput placeholder=\"search\" class=\"search\" [(ngModel)]=\"search\" (keyup)=\"filterSearch()\" />\r\n            <button mat-icon-button matSuffix *ngIf=\"search\" (click)=\"clearSearch()\">\r\n                <mat-icon>\r\n                    close\r\n                </mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n        \r\n        <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n            <ng-container matColumnDef=\"id\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._id}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"name\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Company Name</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._name}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"email\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._email}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"password\">\r\n                <mat-header-cell *matHeaderCellDef>Password</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._password}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"coupons\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Number of Coupons</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._coupons?.length || 0}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"actions\">\r\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">\r\n                    <button mat-icon-button (click)=\"showCompany(element)\">\r\n                        <mat-icon>launch</mat-icon>\r\n                    </button>\r\n                </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"loading\">\r\n                <mat-footer-cell *matFooterCellDef colspan=\"5\">\r\n                    <mat-spinner color=\"accent\" [diameter]=\"30\"></mat-spinner>\r\n                </mat-footer-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"noData\">\r\n                <mat-footer-cell *matFooterCellDef colspan=\"5\">\r\n                    No Companies to show!\r\n                </mat-footer-cell>\r\n            </ng-container>\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n            <mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide':dataSource!=null}\"></mat-footer-row>\r\n            <mat-footer-row *matFooterRowDef=\"['noData']\"\r\n                [ngClass]=\"{'hide': !(dataSource !=null && dataSource.data.length == 0)}\"></mat-footer-row>\r\n        </mat-table>\r\n        <mat-paginator [pageSizeOptions]=\"[5,10,20,100]\" [pageSize]=\"10\"></mat-paginator>\r\n    </section>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Customer } from 'src/app/models/customer';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AddcustomerComponent } from '../addcustomer/addcustomer.component';\r\n\r\n@Component({\r\n  selector: 'app-allcustomers',\r\n  templateUrl: './allcustomers.component.html',\r\n  styleUrls: ['./allcustomers.component.css']\r\n})\r\nexport class AllcustomersComponent implements OnInit {\r\n  customers : Customer[];\r\n  dataSource ;\r\n  search ;\r\n  displayedColumns : string[] = [\"id\",\"firstName\",\"lastName\",\"email\",\"password\",\"coupons\",\"actions\"];\r\n  @ViewChild(MatSort) sort : MatSort;\r\n  @ViewChild(MatPaginator) paginator : MatPaginator;\r\n  constructor( private adminService : AdminService,\r\n               private snackBar : MatSnackBar, \r\n               private dialog : MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.adminService.getAllCustomers().subscribe(\r\n      success =>{\r\n        const customers : Customer[] = Customer.getCustomers(success);\r\n        this.customers = customers;\r\n    \r\n        this.dataSource = new MatTableDataSource(this.customers);\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n      }, error =>{\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0 || error.status == 500){\r\n          errorMessage = \"oops, try again later\";\r\n        }\r\n        this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    )\r\n  }\r\n  showCustomer(customer){\r\n    let config : MatDialogConfig = new MatDialogConfig();\r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"60%\";\r\n    config.data = customer;\r\n    const dialogRef = this.dialog.open(AddcustomerComponent,config);\r\n    dialogRef.afterClosed().subscribe( result => {\r\n      this.ngOnInit();\r\n    })\r\n  }\r\n  addCustomer(){\r\n    let config : MatDialogConfig = new MatDialogConfig();\r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"60%\";\r\n    const dialogRef = this.dialog.open(AddcustomerComponent,config);\r\n    dialogRef.afterClosed().subscribe( result => {\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n  filterSearch(){\r\n    this.dataSource.filter = this.search.trim().toLowerCase();\r\n  }\r\n  clearSearch(){\r\n    this.search = \"\";\r\n    this.filterSearch();\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"header\">\r\n        <h2>List of customers :</h2>\r\n        <h3 *ngIf=\"dataSource?.data\">{{dataSource.data.length}} customers</h3>\r\n    </div>\r\n    <section class=\"section\">\r\n        <button mat-raised-button (click)=\"addCustomer()\">Add Customer</button>\r\n        <mat-form-field>\r\n            <input matInput placeholder=\"search\" class=\"search\" [(ngModel)]=\"search\" (keyup)=\"filterSearch()\" />\r\n            <button mat-icon-button matSuffix *ngIf=\"search\" (click)=\"clearSearch()\">\r\n                <mat-icon>\r\n                    close\r\n                </mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n        \r\n        <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n            <ng-container matColumnDef=\"id\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._id}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"firstName\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>First Name</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._firstName}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"lastName\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Last Name</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._lastName}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"email\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._email}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"password\">\r\n                <mat-header-cell *matHeaderCellDef>Password</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._password}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"coupons\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Number of Coupons</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._coupons.length}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"actions\">\r\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">\r\n                    <button mat-icon-button (click)=\"showCustomer(element)\">\r\n                        <mat-icon>launch</mat-icon>\r\n                    </button>\r\n                </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"loading\">\r\n                <mat-footer-cell *matFooterCellDef colspan=\"5\">\r\n                    <mat-spinner color=\"accent\" [diameter]=\"30\"></mat-spinner>\r\n                </mat-footer-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"noData\">\r\n                <mat-footer-cell *matFooterCellDef colspan=\"5\">\r\n                    No Companies to show!\r\n                </mat-footer-cell>\r\n            </ng-container>\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n            <mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide':dataSource!=null}\"></mat-footer-row>\r\n            <mat-footer-row *matFooterRowDef=\"['noData']\"\r\n                [ngClass]=\"{'hide': !(dataSource !=null && dataSource.data.length == 0)}\"></mat-footer-row>\r\n        </mat-table>\r\n        <mat-paginator [pageSizeOptions]=\"[5,10,20,100]\" [pageSize]=\"10\"></mat-paginator>\r\n    </section>\r\n</div>","import { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CompanyService } from 'src/app/services/company.service';\r\nimport { CustomerService } from 'src/app/services/customer.service';\r\nimport { Company } from './../../models/company';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-companyhome',\r\n  templateUrl: './companyhome.component.html',\r\n  styleUrls: ['./companyhome.component.css']\r\n})\r\nexport class CompanyhomeComponent implements OnInit {\r\n  company : Company;\r\n  constructor(private companyService : CompanyService, private snackBar : MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.companyService.getCompanyDetails().subscribe(\r\n      success =>{\r\n        this.company = Company.getCompany(success);\r\n      },\r\n      error => {\r\n          let errorMessage = error.error;\r\n          if(error.status == 0 || error.status == 500){\r\n            errorMessage = \"Oops, something went wrong\";\r\n          }\r\n          this.snackBar.open(errorMessage,null,{duration: 2000});\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"container\" *ngIf=\"company\">\r\n    <div class=\"header\">\r\n        <h1>Welcome {{company._name}}</h1>\r\n    </div>\r\n</div>","import { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CompanyService } from 'src/app/services/company.service';\r\nimport { Company } from 'src/app/models/company';\r\nimport { Coupon } from 'src/app/models/coupon';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialogConfig, MatDialog } from '@angular/material/dialog';\r\nimport { AddcouponComponent } from '../addcoupon/addcoupon.component';\r\nimport { Customer } from 'src/app/models/customer';\r\n\r\n@Component({\r\n  selector: 'app-companyprofile',\r\n  templateUrl: './companyprofile.component.html',\r\n  styleUrls: ['./companyprofile.component.css']\r\n})\r\nexport class CompanyprofileComponent implements OnInit {\r\n  company: Company;\r\n  coupons: Coupon[];\r\n  clients: Customer[];\r\n  search: string;\r\n  searchOption = \"Regular Search\";\r\n  dataSource;\r\n  displayedColumns: string[] = [\"image\", \"title\", \"category\", \"endDate\", \"originalAmount\", \"bought\", \"price\", \"actions\"]\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  constructor(private companyService: CompanyService, private dialog: MatDialog, private snackBar: MatSnackBar\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.companyService.getCompanyDetails().subscribe(\r\n      success => {\r\n        this.company = Company.getCompany(success);\r\n        this.coupons = Coupon.getCoupons(this.company._coupons);\r\n        this.dataSource = new MatTableDataSource(this.coupons);\r\n        this.dataSource.filterPredicate = (data, filter) => {\r\n          if (this.searchOption == \"By Category\") {\r\n            return data._category.toString().toLowerCase().indexOf(filter) != -1;\r\n          } else if (this.searchOption == \"By Max Price\") {\r\n            return data._price <= +filter;\r\n          } else {\r\n            return this.displayedColumns.some(element => {\r\n              return (element != \"image\" && element != \"actions\") && (data[element].toString().toLowerCase().indexOf(filter) != -1);\r\n            });\r\n          }\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.companyService.getAllClients().subscribe(\r\n          success => {\r\n            this.clients = Customer.getCustomers(success);\r\n\r\n          },\r\n          error => {\r\n            let errorMessage: string = error.error;\r\n            if (error.status == 0 || error.status == 500) {\r\n              errorMessage = \"Oops, try again later\";\r\n            }\r\n            const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n\r\n          }\r\n        )\r\n      },\r\n      error => {\r\n        let errorMessage: string = error.error;\r\n        if (error.status == 0 || error.status == 500) {\r\n          errorMessage = \"Oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    )\r\n  }\r\n  createCoupon() {\r\n    let config: MatDialogConfig = new MatDialogConfig();\r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"60%\";\r\n    const dialogRef = this.dialog.open(AddcouponComponent, config);\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n  editCoupon(coupon) {\r\n    let config: MatDialogConfig = new MatDialogConfig();\r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"60%\";\r\n    config.data = coupon;\r\n    const dialogRef = this.dialog.open(AddcouponComponent, config);\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n  filterSearch() {\r\n    this.dataSource.filter = this.search.trim().toLowerCase();\r\n  }\r\n  clearSearch() {\r\n    this.search = '';\r\n    this.filterSearch();\r\n  }\r\n  getAmountPurchases(coupon: Coupon) {\r\n\r\n    return this.clients?.filter(client => client._coupons.some(c => c._id == coupon._id)).length;\r\n  }\r\n}\r\n","<div class=\"container mat-elevation-z9\">\r\n    <h1>My Profile</h1>\r\n    <mat-tab-group animationDuration=\"0ms\">\r\n        <mat-tab label=\"My Info\">\r\n            <section class=\"info\">\r\n                <mat-toolbar color=\"accent\">\r\n\r\n                    <div class=\"info-header\">\r\n                        Company Information:\r\n                    </div>\r\n                </mat-toolbar>\r\n                <div class=\"info-line\">\r\n                   <label>Name:</label> <span> {{company?._name}} </span>\r\n                </div>\r\n                <div class=\"info-line\">\r\n                    <label>Email:</label> <span>{{company?._email}}</span>\r\n                </div>\r\n                <div class=\"info-line\">\r\n                    <label>Password:</label> <span>{{company?._password}}</span>\r\n                </div>\r\n            </section>\r\n        </mat-tab>\r\n        <mat-tab label=\"Coupons\">\r\n            <button mat-raised-button class=\"create\" (click)=\"createCoupon()\">Add Coupon</button>\r\n            <mat-form-field class=\"search\">\r\n                <mat-label>\r\n                    Search\r\n                </mat-label>\r\n                <input matInput placeholder=\"Search a coupon\" [(ngModel)]=\"search\" (keyup)=\"filterSearch()\" />\r\n                <button mat-icon-button matSuffix (click)=\"clearSearch()\"><mat-icon>cancel</mat-icon></button>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Search by</mat-label>\r\n                <mat-select [(value)]=\"searchOption\">\r\n                    <mat-option value=\"Regular Search\">Regular Search</mat-option>\r\n                    <mat-option value=\"By Category\">By Category</mat-option>\r\n                    <mat-option value=\"By Max Price\">By Max Price</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n                <ng-container matColumnDef=\"image\">\r\n                    <mat-header-cell *matHeaderCellDef>image</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        <img [src]=\"element._image\" [alt]=\"element._title\" width=\"90\" height=\"90\" [title]=\"element._title\" />\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"title\">\r\n                    <mat-header-cell *matHeaderCellDef>description</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._title}}<br>\r\n                        {{element._description}}\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"category\">\r\n                    <mat-header-cell *matHeaderCellDef>Category</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._category}}\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"endDate\">\r\n                    <mat-header-cell *matHeaderCellDef>Valid through</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._startDate}} to<br> \r\n                        {{element._endDate}}\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"originalAmount\">\r\n                    <mat-header-cell *matHeaderCellDef>Amount </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._currentAmount}} / {{element._originalAmount}}\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"bought\">\r\n                    <mat-header-cell *matHeaderCellDef>Amount of purchases</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._bought}}                        \r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"price\">\r\n                    <mat-header-cell *matHeaderCellDef>Price</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._price | currency: 'ILS'}}\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"actions\">\r\n                    <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        <button mat-icon-button (click)=\"editCoupon(element)\"><mat-icon>launch</mat-icon></button>\r\n                        \r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"loading\">\r\n                    <mat-footer-cell *matFooterCellDef colspan=\"5\">\r\n                        <mat-spinner color=\"accent\" [diameter]=\"30\"></mat-spinner>\r\n                    </mat-footer-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"noData\">\r\n                    <mat-footer-cell *matFooterCellDef colspan=\"5\">\r\n                        No Coupons to show!\r\n                    </mat-footer-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n                <mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide':dataSource!=null}\"></mat-footer-row>\r\n                <mat-footer-row *matFooterRowDef=\"['noData']\"\r\n                    [ngClass]=\"{'hide': !(dataSource !=null && dataSource.data.length == 0)}\"></mat-footer-row>\r\n            </mat-table>\r\n            <mat-paginator [pageSizeOptions]=\"[5,10,20,100]\" [pageSize]=\"5\"></mat-paginator>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</div>","import { LoginService } from 'src/app/services/login.service';\r\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { Coupon } from 'src/app/models/coupon';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CustomerService } from 'src/app/services/customer.service';\r\nimport { Customer } from 'src/app/models/customer';\r\n\r\n@Component({\r\n  selector: 'app-coupon',\r\n  templateUrl: './coupon.component.html',\r\n  styleUrls: ['./coupon.component.css']\r\n})\r\n\r\nexport class CouponComponent implements OnInit {\r\n  coupon: Coupon;\r\n  couponId: number;\r\n  disableBuyButton = false;\r\n  otherCustomers: Customer[];\r\n  otherCustomersCoupons: Coupon[];\r\n  recentlyViewedCoupons: Coupon[] = [];\r\n  purchaseAmount: number;\r\n\r\n  countDown;\r\n  constructor(private activeRoute: ActivatedRoute, private customerService: CustomerService,\r\n    private dialog: MatDialog, private snackBar: MatSnackBar, private router: Router, private loginService: LoginService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.couponId = this.activeRoute.snapshot.params['id'];\r\n    this.customerService.getCouponById(this.couponId).subscribe(\r\n      success => {\r\n        this.loginService.updateRecentlyViewed(this.couponId);\r\n        this.coupon = Coupon.getCoupon(success);\r\n        setInterval(() => {\r\n          this.countDown = this.remainingTime();\r\n        }, 1000);\r\n        this.customerService.getCustomersByCoupon(this.couponId).subscribe(\r\n          success => {\r\n            this.otherCustomers = Customer.getCustomers(success);\r\n            this.otherCustomersCoupons = this.otherCustomers.map(customer => customer._coupons).reduce((acc, curr) => acc.concat(curr));\r\n            this.otherCustomersCoupons = this.filterDuplicates(this.otherCustomersCoupons);\r\n            this.otherCustomersCoupons = this.otherCustomersCoupons.filter(coupon => this.sharedCoupon(this.otherCustomers, coupon)).sort(this.sortByBought).slice(0, 5);\r\n          },\r\n          error => {\r\n            let errorMessage: string = error.error;\r\n            if (error.status == 0 || error.status == 500) {\r\n              errorMessage = \"Oops, try again later\";\r\n            }\r\n            const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n          }\r\n        )\r\n      },\r\n      error => {\r\n        if (error.status == 400) {\r\n          this.router.navigateByUrl(\"/not-found\");\r\n          return;\r\n        }\r\n        let errorMessage: string = error.error;\r\n        if (error.status == 0 || error.status == 500) {\r\n          errorMessage = \"Oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    )\r\n    this.showRecentlyViewed();\r\n  }\r\n  showRecentlyViewed() {\r\n    let ids: number[] = this.loginService.getRecentlyViewed().map(id => +id);\r\n    ids.forEach(id => this.customerService.getCouponById(id).subscribe(\r\n      success => {\r\n        this.recentlyViewedCoupons.push(Coupon.getCoupon(success));\r\n      }, error => {\r\n        let errorMessage: string = error.error;\r\n        if (error.status == 0 || error.status == 500) {\r\n          errorMessage = \"Oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    ))\r\n\r\n\r\n  }\r\n  purchaseCoupon() {\r\n    this.disableBuyButton = true;\r\n    this.customerService.purchaseCoupon(this.coupon).subscribe(\r\n      success => {\r\n        const snackRef = this.snackBar.open(success, \"dismiss\");\r\n      },\r\n      error => {\r\n        let errorMessage: string = error.error;\r\n        if (error.status == 0 || error.status == 500) {\r\n          errorMessage = \"Oops, try again later!\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n        snackRef.onAction().subscribe(() => {\r\n          this.disableBuyButton = false;\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  sharedCoupon(customers: Customer[], coupon: Coupon): boolean {\r\n    if (customers.every(customer => customer._coupons.some(coup => coup._id == coupon._id))) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  sortByBought(a: Coupon, b: Coupon) {\r\n    return b._bought - a._bought;\r\n  }\r\n  filterDuplicates(coupons: Coupon[]) {\r\n    let newCoupons: Coupon[] = new Array<Coupon>();\r\n    let newCouponsId: number[] = [];\r\n    for (let coupon of coupons) {\r\n      if (!newCouponsId.includes(coupon._id)) {\r\n        newCoupons.push(coupon);\r\n        newCouponsId.push(coupon._id);\r\n      }\r\n    }\r\n    return newCoupons;\r\n  }\r\n\r\n  limitedTime() {\r\n    const endDate: Date = new Date(this.coupon?._endDate);\r\n    const now: Date = new Date();\r\n    return endDate.getTime() - now.getTime() <= 1000 * 60 * 60 * 72;\r\n  }\r\n  remainingTime() {\r\n    const timeLeftMillis = new Date(this.coupon?._endDate).getTime() - (new Date()).getTime();\r\n    let timeLeftSeconds = Math.floor(timeLeftMillis / 1000).toString();\r\n    let timeLeftHours = Math.floor(+timeLeftSeconds / 3600).toString();\r\n    let timeLeftMinutes = Math.floor((+timeLeftSeconds - (+timeLeftHours * 3600)) / 60).toString();\r\n    timeLeftSeconds = Math.floor(+timeLeftSeconds - (+timeLeftHours * 3600) - (+timeLeftMinutes * 60)).toString();\r\n    timeLeftHours = timeLeftHours.length == 1 ? \"0\" + timeLeftHours : timeLeftHours;\r\n    timeLeftMinutes = timeLeftMinutes.length == 1 ? \"0\" + timeLeftMinutes : timeLeftMinutes;\r\n    timeLeftSeconds = timeLeftSeconds.length == 1 ? \"0\" + timeLeftSeconds : timeLeftSeconds;\r\n    return timeLeftHours + \":\" + timeLeftMinutes + \":\" + timeLeftSeconds;\r\n  }\r\n}\r\n\r\n","<div class=\"container mat-elevation-z8\">\r\n    <div class=\"loading\" *ngIf=\"!coupon\">\r\n        <mat-spinner color=\"accent\" diameter=\"200\"></mat-spinner>\r\n    </div>\r\n    <div class=\"coupon-page\" *ngIf=\"coupon\">\r\n        <div class=\"coupon-card\">\r\n\r\n            <img [src]=\"coupon?._image\" [alt]=\"coupon?._title\" />\r\n            <div class=\"info\">\r\n                <div class=\"info-content\">\r\n\r\n                    <h1>{{coupon?._title}}</h1>\r\n                    <h3>{{coupon?._description}}</h3>\r\n                    <p>This coupon expires on {{coupon?._endDate}}, hurry!</p>\r\n                    <p>only {{coupon?._price | currency:'ILS'}}</p>\r\n                    <button mat-raised-button color=\"accent\" [disabled]=\"disableBuyButton\"\r\n                        (click)=\"purchaseCoupon()\">Buy\r\n                        NOW!</button>\r\n                    <p>{{purchaseAmount}} other people bought this coupon </p>\r\n                    <p class=\"count-down\" *ngIf=\"limitedTime()\">\r\n                        ONLY {{ countDown }} HOURS LEFT! HURRY!\r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n      \r\n        </div>\r\n        <hr>\r\n        <div class=\"additional\">\r\n            <p>People who bought {{coupon?._title}} Also enjoyed these:</p>\r\n            <div class=\"additional-coupons\">\r\n\r\n                <app-minicoupon *ngFor=\"let coupon of otherCustomersCoupons\" [boughtBy]=\"coupon._bought\"\r\n                    [coupon]=\"coupon\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"additional\" *ngIf=\"recentlyViewedCoupons\">\r\n            <p>You were recently interested in these coupons:</p>\r\n            <div class=\"additional-coupons\">\r\n\r\n                <app-minicoupon *ngFor=\"let coupon of recentlyViewedCoupons\" [boughtBy]=\"coupon._bought\"\r\n                    [coupon]=\"coupon\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CustomerService } from 'src/app/services/customer.service';\r\nimport { Category } from 'src/app/models/category.enum';\r\nimport { Coupon } from 'src/app/models/coupon';\r\nimport { Customer } from 'src/app/models/customer';\r\n\r\n@Component({\r\n  selector: 'app-couponbycategory',\r\n  templateUrl: './couponbycategory.component.html',\r\n  styleUrls: ['./couponbycategory.component.css']\r\n})\r\nexport class CouponbycategoryComponent implements OnInit {\r\n  category : Category;\r\n  categoryName : string;\r\n  coupons : Coupon[] = [];\r\n  constructor(private activeRoute : ActivatedRoute, private customerService : CustomerService, private snackBar : MatSnackBar) { }\r\n  toCategory(text) : Category{\r\n    return Category.Food;\r\n  }\r\n  ngOnInit(): void {\r\n    this.category = (<any>Category)[this.activeRoute.snapshot.params[\"category\"]];\r\n    this.categoryName = Category[this.category];\r\n    this.customerService.getAllCouponsByCategory(this.category).subscribe(\r\n      success =>{\r\n        this.coupons = Coupon.getCoupons(success).sort( (a:Coupon,b:Coupon)=>b._bought-a._bought);\r\n     \r\n      },\r\n      error => {\r\n        let errorMessage: string = error.error;\r\n            if (error.status == 0 || error.status == 500) {\r\n              errorMessage = \"Oops, try again later\";\r\n            }\r\n            const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <mat-toolbar color=\"accent\">\r\n        <h1>\r\n        {{categoryName}}\r\n     </h1>\r\n    </mat-toolbar>\r\n    <div class=\"category-coupons\">\r\n\r\n        <app-minicoupon *ngFor=\"let coupon of coupons\" [coupon]=\"coupon\" [boughtBy]=\"coupon._bought\"></app-minicoupon>\r\n    </div>\r\n</div>","import { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Coupon } from 'src/app/models/coupon';\r\nimport { CustomerService } from 'src/app/services/customer.service';\r\nimport { Customer } from 'src/app/models/customer';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, filter } from 'rxjs/operators';\r\nimport { Category } from 'src/app/models/category.enum';\r\n\r\n@Component({\r\n  selector: 'app-customerhome',\r\n  templateUrl: './customerhome.component.html',\r\n  styleUrls: ['./customerhome.component.css']\r\n})\r\nexport class CustomerhomeComponent implements OnInit {\r\n  coupons: Coupon[];\r\n  numbers: number[] = [1,2,3];\r\n  autoComplete : FormControl = new FormControl();\r\n  searchOption = \"All\";\r\n  categories : string[] = Object.keys(Category).filter( category => isNaN(+category) );\r\n  optionsB : Coupon[];\r\n  \r\n  limitedTimeCoupons: Coupon[] = [];\r\n  topPicksCoupons: Coupon[] = [];\r\n  topPicksQualifier = 2;\r\n  foodCoupons : Coupon[];\r\n  electricityCoupons : Coupon[];\r\n  fashionCoupons : Coupon[];\r\n  petsCoupons : Coupon[];\r\n  tourismCoupons : Coupon[];\r\n  furnitureCoupons : Coupon[]\r\n  spaCoupons : Coupon[];\r\n\r\n  constructor(private customerService: CustomerService, private snackBar : MatSnackBar) { }\r\n\r\n  display(coupon :Coupon) : string{\r\n    return coupon && coupon._title ? coupon._title : '';\r\n  }\r\n  clearSearch(){\r\n    this.autoComplete.setValue('');\r\n    this.optionsB = null;\r\n  }\r\n  \r\n \r\n  searchListener(){\r\n    if(this.autoComplete.value.length >=3)\r\n      this.optionsB = this.coupons.filter( coupon =>  coupon._title.toLowerCase().includes(this.autoComplete.value)\r\n                                          && (this.searchOption != \"All\" ? coupon._category.toString() == this.searchOption : true)).slice(0,6);\r\n    if(this.autoComplete.value.length < 3)\r\n      this.optionsB = null;\r\n\r\n  }\r\n  sortByBought(a : Coupon, b : Coupon){\r\n    return b._bought - a._bought;\r\n  }\r\n  sortByLimitedTime(a : Coupon, b:Coupon){\r\n    return (new Date(a._endDate)).getTime() - (new Date(b._endDate)).getTime()\r\n  }\r\n  ngOnInit(): void {\r\n    this.customerService.getAllCoupons().subscribe(\r\n      success => {\r\n        this.coupons = Coupon.getCoupons(success).sort(this.sortByBought);\r\n        \r\n        this.topPicksCoupons = this.coupons.slice(0,5);\r\n        this.electricityCoupons = this.coupons.filter( coupon => coupon._category.toString() == \"Electricity\" ).sort( this.sortByBought ).slice(0,5);\r\n        this.foodCoupons = this.coupons.filter( coupon => coupon._category.toString() == \"Food\" ).slice(0,5);\r\n        this.spaCoupons = this.coupons.filter( coupon => coupon._category.toString() == \"Spa\" ).slice(0,5);\r\n        this.petsCoupons = this.coupons.filter( coupon => coupon._category.toString() == \"Pets\" ).slice(0,5);\r\n        this.tourismCoupons = this.coupons.filter( coupon => coupon._category.toString() == \"Tourism\" ).slice(0,5);\r\n        this.furnitureCoupons = this.coupons.filter( coupon => coupon._category.toString() == \"Furniture\" ).slice(0,5);\r\n        this.fashionCoupons = this.coupons.filter( coupon => coupon._category.toString() == \"Fashion\" ).slice(0,5);\r\n\r\n        this.limitedTimeCoupons = this.coupons.filter(this.limitedTime).sort(this.sortByLimitedTime).slice(0,3);\r\n        \r\n      }, error => {\r\n        let errorMessage: string = error.error;\r\n        if (error.status == 0 || error.status == 500) {\r\n          errorMessage = \"Oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    );\r\n  }\r\n\r\n  limitedTime(coupon: Coupon) {\r\n    const endDate: Date = new Date(coupon._endDate);\r\n    const today: Date = new Date();\r\n    if (endDate.getTime() - today.getTime() <= 1000 * 60 * 60 * 72) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"overlay\" *ngIf=\"autoComplete.value\" (click)=\"clearSearch()\"></div>\r\n    <div>\r\n        <mat-toolbar color=\"accent\"><span class=\"categories\">\r\n            <a mat-button [routerLink]=\"['/category/',category]\" *ngFor=\"let category of categories\">{{category}}</a></span></mat-toolbar>\r\n        <div class=\"search-box\">\r\n            <mat-form-field class=\"search\" color=\"primary\">\r\n                <mat-label>Search coupon</mat-label>\r\n                <mat-spinner matPrefix *ngIf=\"autoComplete.value?.length > 0 && autoComplete.value?.length < 3\" [diameter]=\"30\" color=\"primary\"></mat-spinner>\r\n                <input type=\"search\" matInput (input)=\"searchListener()\" [formControl]=\"autoComplete\" />\r\n                <button mat-icon-button matSuffix *ngIf=\"autoComplete.value\" (click)=\"clearSearch()\">\r\n                    <mat-icon>cancel</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"search-by\">\r\n                <mat-label>Search by</mat-label>\r\n                <mat-select [(value)]=\"searchOption\">\r\n                    <mat-option value=\"All\">All</mat-option>\r\n                    <mat-option *ngFor=\"let category of categories\" [value]=\"category\">{{category}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"search-coupons offers mat-elevation-z8\" *ngIf=\"autoComplete.value\">\r\n            <app-minicoupon *ngFor=\"let coupon of optionsB\" [coupon]=\"coupon\" [search]=\"true\">\r\n            </app-minicoupon>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <br>\r\n    <br>\r\n    <div>\r\n\r\n        <div class=\"limited-time mat-elevation-z8\">\r\n            <h2>Limited Time Coupons - DONT MISS OUT</h2>\r\n            <div class=\"limited-time-coupons offers\">\r\n\r\n                <app-minicoupon *ngFor=\"let coupon of limitedTimeCoupons\" [coupon]=\"coupon\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"top-picks mat-elevation-z8\">\r\n            <h2>Customers Top Picks</h2>\r\n            <div class=\"top-picks-coupons offers\">\r\n                <app-minicoupon *ngFor=\"let coupon of topPicksCoupons\" [coupon]=\"coupon\"\r\n                    [boughtBy]=\"coupon._bought\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"elec mat-elevation-z8\">\r\n            <h2>Electricity</h2>\r\n            <div class=\"elec-coupons offers\">\r\n                <app-minicoupon *ngFor=\"let coupon of electricityCoupons\" [coupon]=\"coupon\"\r\n                    [boughtBy]=\"coupon._bought\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"fashion mat-elevation-z8\">\r\n            <h2>Fashion</h2>\r\n            <div class=\"fashion-coupons offers\">\r\n                <app-minicoupon *ngFor=\"let coupon of fashionCoupons\" [coupon]=\"coupon\"\r\n                    [boughtBy]=\"coupon._bought\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n        <div class=\"food mat-elevation-z8\">\r\n            <h2>Food</h2>\r\n            <div class=\"food-coupons offers\">\r\n                <app-minicoupon *ngFor=\"let coupon of foodCoupons\" [coupon]=\"coupon\"\r\n                    [boughtBy]=\"coupon._bought\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n        <div class=\"pets mat-elevation-z8\">\r\n            <h2>Pets</h2>\r\n            <div class=\"pets-coupons offers\">\r\n                <app-minicoupon *ngFor=\"let coupon of petsCoupons\" [coupon]=\"coupon\"\r\n                    [boughtBy]=\"coupon._bought\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n\r\n     \r\n        <div class=\"furniture mat-elevation-z8\">\r\n            <h2>Furniture</h2>\r\n            <div class=\"furniture-coupons offers\">\r\n                <app-minicoupon *ngFor=\"let coupon of furnitureCoupons\" [coupon]=\"coupon\"\r\n                    [boughtBy]=\"coupon._bought\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n        <div class=\"spa mat-elevation-z8\">\r\n            <h2>Spa</h2>\r\n            <div class=\"spa-coupons offers\">\r\n                <app-minicoupon *ngFor=\"let coupon of spaCoupons\" [coupon]=\"coupon\"\r\n                    [boughtBy]=\"coupon._bought\"></app-minicoupon>\r\n            </div>\r\n        </div> <br>\r\n      \r\n    </div>\r\n\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Customer } from 'src/app/models/customer';\r\nimport { CustomerService } from 'src/app/services/customer.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Coupon } from 'src/app/models/coupon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-customerprofile',\r\n  templateUrl: './customerprofile.component.html',\r\n  styleUrls: ['./customerprofile.component.css']\r\n})\r\nexport class CustomerprofileComponent implements OnInit {\r\n  customer : Customer;\r\n  coupons: Coupon[];\r\n  search : string;\r\n  searchOption = \"Regular Search\";\r\n  dataSource;\r\n  displayedColumns : string[] = [\"image\",\"title\",\"endDate\",\"price\"]\r\n  @ViewChild(MatPaginator) paginator : MatPaginator;\r\n  @ViewChild(MatSort) sort : MatSort;\r\n  constructor(private customerService : CustomerService, private snackBar : MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.customerService.getCustomerDetails().subscribe(\r\n      success =>{\r\n        this.customer = Customer.getCustomer(success);\r\n        this.coupons = Coupon.getCoupons(this.customer._coupons);\r\n        this.dataSource = new MatTableDataSource(this.coupons);\r\n        this.dataSource.filterPredicate = (data, filter) => {\r\n          if(this.searchOption == \"By Category\"){\r\n            return data._category.toString().toLowerCase().indexOf(filter) != -1;\r\n          }else if(this.searchOption == \"By Max Price\"){\r\n            return data._price <= +filter;\r\n          }else{\r\n            return this.displayedColumns.some( element =>{\r\n              return element != \"image\" && data[element].toString().toLowerCase().indexOf(filter) != -1\r\n            }); \r\n          }\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n      },\r\n      error =>{\r\n        if(error.status != 401){\r\n          let errorMessage = error.error;\r\n          if(error.status == 0 || error.status == 500){\r\n            errorMessage = \"Oops, something went wrong\";\r\n          }\r\n          this.snackBar.open(errorMessage,null,{duration: 2000});\r\n        }\r\n      }\r\n    )\r\n  }\r\n    filterSearch(){\r\n      this.dataSource.filter = this.search.trim().toLowerCase();\r\n    }\r\n    clearSearch(){\r\n      this.search = '';\r\n      this.filterSearch();\r\n    }\r\n\r\n}\r\n","<div class=\"container mat-elevation-z9\">\r\n    <h1>My Profile</h1>\r\n    <mat-tab-group animationDuration=\"0ms\">\r\n        <mat-tab label=\"My Info\">\r\n            <section class=\"info\">\r\n                <mat-toolbar color=\"accent\">\r\n\r\n                    <div class=\"info-header\">\r\n                        Personal Information:\r\n                    </div>\r\n                </mat-toolbar>\r\n                <div class=\"info-line\">\r\n                   <label>Full Name:</label> <span> {{customer?._firstName}} &nbsp; {{customer?._lastName}}</span>\r\n                </div>\r\n                <div class=\"info-line\">\r\n                    <label>Email:</label> <span>{{customer?._email}}</span>\r\n                </div>\r\n                <div class=\"info-line\">\r\n                    <label>Password:</label> <span>{{customer?._password}}</span>\r\n                </div>\r\n            </section>\r\n        </mat-tab>\r\n        <mat-tab label=\"My Coupons\">\r\n            <mat-form-field class=\"search\">\r\n                <mat-label>\r\n                    Search\r\n                </mat-label>\r\n                <input matInput placeholder=\"Search a coupon\" [(ngModel)]=\"search\" (keyup)=\"filterSearch()\" />\r\n                <button mat-icon-button matSuffix *ngIf=\"search\" (click)=\"clearSearch()\"><mat-icon>cancel</mat-icon></button>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field>\r\n                <mat-label>Search by</mat-label>\r\n                <mat-select [(value)]=\"searchOption\">\r\n                    <mat-option value=\"Regular Search\">Regular Search</mat-option>\r\n                    <mat-option value=\"By Category\">By Category</mat-option>\r\n                    <mat-option value=\"By Max Price\">By Max Price</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n                <ng-container matColumnDef=\"image\">\r\n                    <mat-header-cell *matHeaderCellDef>image</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        <img [src]=\"element._image\" [alt]=\"element._title\" width=\"90\" height=\"90\" [title]=\"element._title\" />\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"title\">\r\n                    <mat-header-cell *matHeaderCellDef colspan=\"2\">Title</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._title}} <br>\r\n                        {{element._description}} <br>\r\n                        {{element._category}}\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"endDate\">\r\n                    <mat-header-cell *matHeaderCellDef>Valid through</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._startDate}} &nbsp;to<br>\r\n                        {{element._endDate}}\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"price\">\r\n                    <mat-header-cell *matHeaderCellDef>Price</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._price | currency:'ILS'}}\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"loading\">\r\n                    <mat-footer-cell *matFooterCellDef colspan=\"5\">\r\n                        <mat-spinner color=\"accent\" [diameter]=\"30\"></mat-spinner>\r\n                    </mat-footer-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"noData\">\r\n                    <mat-footer-cell *matFooterCellDef colspan=\"5\">\r\n                        No Coupons to show!\r\n                    </mat-footer-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n                <mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide':dataSource!=null}\"></mat-footer-row>\r\n                <mat-footer-row *matFooterRowDef=\"['noData']\"\r\n                    [ngClass]=\"{'hide': !(dataSource !=null && dataSource.data.length == 0)}\"></mat-footer-row>\r\n            </mat-table>\r\n            <mat-paginator [pageSizeOptions]=\"[5,10,20,100]\" [pageSize]=\"5\"></mat-paginator>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from 'src/app/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(public loginService : LoginService) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h1>Welcome to Couponara</h1>\r\n    <ng-container *ngIf=\"loginService.clientType?.toString() == 'Administrator'\">\r\n        <app-adminhome></app-adminhome>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"loginService.clientType?.toString() == 'Company'\">\r\n        <app-companyprofile></app-companyprofile>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"loginService.clientType?.toString() == 'Customer'\">\r\n        <app-customerhome></app-customerhome>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-loading',\r\n  templateUrl: './loading.component.html',\r\n  styleUrls: ['./loading.component.css']\r\n})\r\nexport class LoadingComponent implements OnInit {\r\n  \r\n  couponId;\r\n  constructor(private activeRoute : ActivatedRoute, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.couponId = this.activeRoute.snapshot.params[\"id\"];\r\n    this.router.navigateByUrl(\"/coupon/\"+this.couponId); \r\n  }\r\n\r\n}\r\n","<div class=\"container mat-elevation-z8\">\r\n    <mat-spinner color=\"accent\" [diameter]=\"60\"></mat-spinner>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ClientType } from 'src/app/services/client-type.enum';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm : FormGroup;\r\n  clientTypes = Object.keys(ClientType).filter( prop => isNaN(+prop));\r\n  visibility : string= \"visibility\";\r\n  type : string = \"password\";\r\n  constructor(private fb : FormBuilder, private loginService : LoginService, \r\n              private snackBar : MatSnackBar, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.loginForm = this.fb.group({\r\n      email : [\"\",[Validators.required,Validators.email]],\r\n      password : [\"\",[Validators.required]],\r\n      clientType: [\"\", [Validators.required]]\r\n    });\r\n\r\n  }\r\n  public login(){\r\n    this.loginService.login(this.email.value, this.password.value, this.clientType.value);\r\n  }\r\n  public showPassword(){\r\n    if(this.type == \"password\"){\r\n      this.type = \"text\";\r\n      this.visibility = \"visibility_off\";\r\n    }else{\r\n      this.type = \"password\";\r\n      this.visibility = \"visibility\";\r\n    }\r\n  }\r\n  get email(){\r\n    return this.loginForm.controls['email'];\r\n  }\r\n  get password(){\r\n    return this.loginForm.controls['password'];\r\n  }\r\n  get clientType(){\r\n    return this.loginForm.controls['clientType'];\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"form-card mat-elevation-z8\">\r\n        <mat-toolbar color=\"accent\">\r\n            <h2>Login</h2>\r\n        </mat-toolbar>\r\n        <form [formGroup]=\"loginForm\">\r\n            <mat-form-field>\r\n                <mat-label>Email</mat-label>\r\n                <input matInput type=\"email\" placeholder=\"e.g. John@gmail.com\" formControlName=\"email\" />\r\n                <mat-error *ngIf=\"email.errors?.required\">Email is required</mat-error>\r\n                <mat-error *ngIf=\"email.errors?.email\">Invalid email</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Password</mat-label>\r\n                <input matInput [type]=\"type\" placeholder=\"your password\" formControlName=\"password\" />\r\n                <button mat-icon-button matSuffix (click)=\"showPassword()\"><mat-icon>{{visibility}}</mat-icon></button>\r\n                <mat-error>Password is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Client Type</mat-label>\r\n                <mat-select formControlName=\"clientType\">\r\n                    <mat-option *ngFor=\"let t of clientTypes\" [value]=\"t\">{{t}}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"clientType.errors?.required\">Client Type is required</mat-error>\r\n            </mat-form-field>\r\n            <button mat-raised-button [disabled]=\"!loginForm.valid\" (click)=\"login()\">Login</button>\r\n            <button mat-raised-button>forgot my password</button>\r\n        </form>\r\n    </div>\r\n    </div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Coupon } from 'src/app/models/coupon';\r\nimport { CustomerService } from 'src/app/services/customer.service';\r\nimport { Customer } from 'src/app/models/customer';\r\nimport { Router } from '@angular/router';\r\nimport { CouponComponent } from '../coupon/coupon.component';\r\n\r\n@Component({\r\n  selector: 'app-minicoupon',\r\n  templateUrl: './minicoupon.component.html',\r\n  styleUrls: ['./minicoupon.component.css']\r\n})\r\nexport class MinicouponComponent implements OnInit {\r\n\r\n  @Input()\r\n  coupon : Coupon;\r\n  @Input()\r\n  boughtBy;\r\n  @Input()\r\n  search;\r\n  imgPlaceHolder= \"assets/product-placeholder.png\";\r\n  constructor(private customerService : CustomerService, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.coupon){\r\n      this.imgPlaceHolder = this.coupon._image;\r\n    }\r\n    if(!this.boughtBy && this.coupon){\r\n      this.customerService.getCustomersByCoupon(this.coupon._id).subscribe(\r\n        success => {\r\n          this.boughtBy = Customer.getCustomers(success).length;\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div *ngIf=\"!coupon\">\r\n        <mat-spinner color=\"accent\" [diameter]=\"60\"></mat-spinner>\r\n    </div>\r\n    <div class=\"search\" *ngIf=\"search && coupon\">\r\n\r\n        <a [routerLink]=\"['/loading/',coupon._id]\">\r\n            <img [src]=\"imgPlaceHolder\" alt=\"\" />\r\n        </a>\r\n\r\n        {{coupon._title}}\r\n        <p>\r\n            {{coupon._description}}\r\n        </p>\r\n        {{boughtBy}} people bought this!\r\n\r\n    </div>\r\n    <div *ngIf=\"!search && coupon\">\r\n\r\n        <a [routerLink]=\"['/loading/',coupon._id]\">\r\n            <img [src]=\"imgPlaceHolder\" alt=\"\" />\r\n\r\n        </a>\r\n        <div class=\"coupon-info\">\r\n            {{coupon._title}}\r\n            <span class=\"price\">\r\n                {{coupon._price | currency:'ILS' }}\r\n            </span><br>\r\n            <a [routerLink]=\"['/category/',coupon._category]\">{{coupon._category}}</a>\r\n            <span class=\"bought\">\r\n                {{boughtBy}} bought this\r\n\r\n            </span>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { ClientType } from 'src/app/services/client-type.enum';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { AddcompanyComponent } from '../addcompany/addcompany.component';\r\nimport { AddcustomerComponent } from '../addcustomer/addcustomer.component';\r\nimport { AddcouponComponent } from '../addcoupon/addcoupon.component';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  \r\n  constructor(public router : Router, public loginService : LoginService, private dialog : MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    const t : ClientType = ClientType.Administrator;\r\n    \r\n  }\r\n  goHome(){\r\n    if(this.loginService.clientType == \"Company\"){\r\n      this.router.navigateByUrl(\"/company-profile\")\r\n    }else{\r\n      this.router.navigateByUrl(\"/home\")\r\n    }\r\n  }\r\n  createCompany(){\r\n    let config : MatDialogConfig  = new MatDialogConfig();\r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"40%\";\r\n    this.dialog.open(AddcompanyComponent, config);\r\n  }\r\n  createCustomer(){\r\n    let config : MatDialogConfig  = new MatDialogConfig();\r\n   \r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"40%\";\r\n    this.dialog.open(AddcustomerComponent, config);\r\n  }\r\n  createCoupon(){\r\n    let config : MatDialogConfig = new MatDialogConfig();\r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"60%\";\r\n    this.dialog.open(AddcouponComponent, config);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <mat-toolbar color=\"primary\">\r\n        <span class=\"logo\" (click)=\"goHome()\">\r\n            <img src='assets/logo2.png' alt='alt' />\r\n        </span>\r\n        <!-- <span>\r\n        {{loginService.authenticated}}\r\n    </span>&nbsp;<span> \r\n        {{loginService.clientType?.toString() || 'no client type'}}\r\n    </span> -->\r\n        <span class=\"fill-toolbar\"></span>\r\n        \r\n        <div class=\"actions\">\r\n            <mat-spinner color=\"accent\" *ngIf=\"!loginService.authenticated; else logout\" [diameter]=\"30\"></mat-spinner>\r\n            <ng-template #logout>\r\n                \r\n                \r\n                <button mat-icon-button *ngIf=\"loginService.authenticated == 2\" [matMenuTriggerFor]=\"myMenu\" ><mat-icon>account_circle</mat-icon></button>\r\n                <mat-menu #myMenu=\"matMenu\">\r\n                    \r\n                    <ng-container *ngIf=\"loginService.clientType?.toString() == 'Administrator'\">\r\n                        <button mat-menu-item (click)=\"createCompany()\">New Company</button>\r\n                        <button mat-menu-item routerLink=\"all-companies\">All Companies</button>\r\n                        <button mat-menu-item (click)=\"createCustomer()\">New Customer</button>\r\n                        <button mat-menu-item routerLink=\"all-customers\">All Customers</button>\r\n                    </ng-container>\r\n                    \r\n                    <!-- <ng-container *ngIf=\"loginService.clientType?.toString() == 'Company'\">\r\n                        <button mat-menu-item routerLink=\"company-profile\">My Profile</button>\r\n                    </ng-container> -->\r\n                    <ng-container *ngIf=\"loginService.clientType?.toString() == 'Customer'\">\r\n                        <button mat-menu-item routerLink=\"customer-profile\">My Profile</button>\r\n                    </ng-container>\r\n                    <button mat-menu-item (click)=\"loginService.logout()\">Logout</button>\r\n                    \r\n\r\n                </mat-menu>\r\n            </ng-template>\r\n\r\n        </div>\r\n    </mat-toolbar>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pagenotfound',\r\n  templateUrl: './pagenotfound.component.html',\r\n  styleUrls: ['./pagenotfound.component.css']\r\n})\r\nexport class PagenotfoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"error mat-elevation-z8\">\r\n\r\n        <h1>404</h1>\r\n        <p>\r\n            Oops, we couldnt find what you were looking for.\r\n        </p>\r\n    </div>\r\n</div>","export enum Category {\r\n    Food, Electricity, Fashion, Pets, Tourism, Furniture, Spa\r\n    \r\n   \r\n}\r\n","import { Coupon } from './coupon';\r\n\r\nexport class Company {\r\n    constructor(private id : number,\r\n                private name : string,\r\n                private email : string,\r\n                private password : string,\r\n                private coupons? : Coupon[]\r\n        ){}\r\n    get _id() : number{\r\n        return this.id;\r\n    }\r\n    set _id(id : number){\r\n        this.id = id;\r\n    }\r\n    get _name() : string{\r\n        return this.name;\r\n    }\r\n    set _name(name :string){\r\n        this.name = name;\r\n    }\r\n    get _email() : string{\r\n        return this.email;\r\n    }\r\n    set _email(email : string){\r\n        this.email = email;\r\n    }\r\n    get _password() : string{\r\n        return this.password;\r\n    }\r\n    set _password(password : string) {\r\n        this.password = password;\r\n    }\r\n    get _coupons(): Coupon[]{\r\n        let coupons : Coupon[] = new Array<Coupon>();\r\n        if(this.coupons)\r\n            coupons = this.coupons;\r\n        return coupons;\r\n\r\n    }\r\n    public static getCompany(obj : Company) : Company{\r\n        let company : Company = new Company(0,\"\",\"\",\"\",[]);\r\n        return Object.assign(company,obj);\r\n    }\r\n    public static getCompanies(obj : Company[]) : Company[]{\r\n        let companies : Company[] = new Array<Company>();\r\n        for(let c of obj){\r\n            companies.push(this.getCompany(c));\r\n        }\r\n        return companies;\r\n    }\r\n}\r\n","import { Category } from './category.enum';\r\n\r\nexport class Coupon {\r\n    private bought : number;\r\n    constructor( private id : number,\r\n                 private companyId : number,\r\n                 private category : Category,\r\n                 private title : string,\r\n                 private description : string,\r\n                 private startDate : Date,\r\n                 private endDate : Date,\r\n                 private originalAmount :  number,\r\n                 private currentAmount : number,\r\n                 private price : number,\r\n                 private image : string\r\n        ){\r\n            this.bought = originalAmount - currentAmount;\r\n        }\r\n    get _id() : number{\r\n        return this.id;\r\n    }\r\n    set _id(id : number) {\r\n        this.id = id;\r\n    }\r\n    get _category(){\r\n        return this.category;\r\n    }\r\n    set _category(category : Category){\r\n        this.category = category;\r\n    }\r\n    get _companyId() : number{\r\n        return this.companyId;\r\n    }\r\n    set _companyId(companyId : number) {\r\n        this.companyId = companyId;\r\n    }\r\n\r\n    get _title() : string{\r\n        return this.title;\r\n    }\r\n    set _title(title : string){\r\n        this.title = title;\r\n    }\r\n    get _description() : string {\r\n        return this.description;\r\n    }\r\n    set _description(description : string){\r\n        this.description = description;\r\n    }\r\n    get _startDate() : Date{\r\n        return this.startDate;\r\n    }\r\n    set _startDate(startDate : Date){\r\n        this.startDate = startDate;\r\n    }\r\n    get _endDate() : Date{\r\n        return this.endDate;\r\n    }\r\n    set _endDate(endDate : Date){\r\n        this.endDate = endDate;\r\n    }\r\n    get _originalAmount() : number{\r\n        return this.originalAmount;\r\n    }\r\n    set _originalAmount(originalAmount : number) {\r\n        this.originalAmount = originalAmount;\r\n    }\r\n    get _currentAmount() : number{\r\n        return this.currentAmount;\r\n    }\r\n    set _currentAmount(currentAmount : number){\r\n        this.currentAmount = currentAmount;\r\n    }\r\n    get _bought() : number{\r\n        return this.bought;\r\n    }\r\n    get _price() : number{\r\n        return this.price;\r\n    }\r\n    set _price(price : number){\r\n        this.price = price;\r\n    }\r\n    get _image() : string{\r\n        return this.image;\r\n    }\r\n    set _image(image :string){\r\n        this.image = image;\r\n    }\r\n    public static getCoupon(obj : Coupon){\r\n        let coupon : Coupon = new Coupon(obj.id,obj.companyId,obj.category,obj.title,\r\n                                         obj.description,obj.startDate,obj.endDate,\r\n                                         obj.originalAmount,obj.currentAmount,obj.price,obj.image);\r\n\r\n        return coupon;\r\n    }\r\n    public static getCoupons(obj : Coupon[]){\r\n        let coupons : Coupon[] = new Array<Coupon>();\r\n        for(let c of obj){\r\n            coupons.push(this.getCoupon(c));\r\n        }\r\n        return coupons;\r\n    }\r\n\r\n}\r\n","import { Coupon } from './coupon';\r\n\r\nexport class Customer {\r\n    constructor( private id : number,\r\n                 private firstName : string,\r\n                 private lastName : string,\r\n                 private email : string,\r\n                 private password : string,\r\n                 private coupons? : Coupon[]\r\n        ){}\r\n\r\n    get _id() : number{\r\n        return this.id;\r\n    }\r\n    set _id(id : number){\r\n        this.id = id;\r\n    }\r\n    get _firstName() : string {\r\n        return this.firstName;\r\n    }\r\n    set _firstName(firstName : string){\r\n        this.firstName = firstName;\r\n    }\r\n    get _lastName() : string{\r\n        return this.lastName;\r\n    }\r\n    set _lastName(lastName : string){\r\n        this.lastName = lastName;\r\n    }\r\n    get _email() : string{\r\n        return this.email;\r\n    }\r\n    set _email(email : string){\r\n        this.email = email;\r\n    }\r\n    get _password() : string{\r\n        return this.password;\r\n    }\r\n    set _password(password : string){\r\n        this.password = password;\r\n    }\r\n    get _coupons() : Coupon[]{\r\n        let coupons : Coupon[] = new Array<Coupon>();\r\n        if(this.coupons)\r\n            coupons = this.coupons;\r\n        return coupons;\r\n    }\r\n    set _coupons(coupons : Coupon[]){\r\n        this.coupons = coupons;\r\n    }\r\n\r\n    public static getCustomer(obj : Customer){\r\n        let customer : Customer = new Customer(obj.id,obj.firstName,obj.lastName,obj.email,obj.password,[]);\r\n        customer._coupons = Coupon.getCoupons(obj.coupons);\r\n        return customer;\r\n    }\r\n    public static getCustomers(obj : Customer[]){\r\n        let customers : Customer[] = new Array<Customer>();\r\n        for(let c of obj){\r\n            customers.push(this.getCustomer(c))\r\n        }\r\n        return customers;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Company } from '../models/company';\r\nimport { LoginService } from './login.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Customer } from '../models/customer';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  path = \"/admin\"\r\n  constructor(private client : HttpClient, private loginService : LoginService) { }\r\n  public addCompany( company : Company){\r\n    const path : string = this.path + \"/add-company/\" + this.loginService.token;\r\n    return this.client.post(path, company);\r\n  }\r\n  public updateCompany( company : Company){\r\n    const path : string = this.path + \"/update-company/\" + this.loginService.token;\r\n    return this.client.post(path, company);\r\n  }\r\n  public deleteCompany( id: number ){\r\n    let path : string = this.path + \"/delete-company/\" + this.loginService.token;\r\n    path += \"/\"+id;\r\n    return this.client.delete(path,{responseType:\"text\"});\r\n  }\r\n\r\n  public getAllCompanies() : Observable<Company[]>{\r\n    const path : string = this.path + \"/get-all-companies/\" + this.loginService.token;\r\n    return this.client.get<Company[]>(path);\r\n  }\r\n  public addCustomer( customer : Customer){\r\n    const path : string = this.path + \"/add-customer/\" + this.loginService.token;\r\n    return this.client.post(path, customer);\r\n  }\r\n  public updateCustomer( customer : Customer){\r\n    const path : string = this.path + \"/update-customer/\" + this.loginService.token;\r\n    return this.client.post(path, customer);\r\n  }\r\n  public deleteCustomer( id: number ){\r\n    let path : string = this.path + \"/delete-customer/\" + this.loginService.token;\r\n    path += \"/\"+id;\r\n    return this.client.delete(path,{responseType:\"text\"});\r\n  }\r\n\r\n  public getAllCustomers() : Observable<Customer[]>{\r\n    const path : string = this.path + \"/get-all-customers/\" + this.loginService.token;\r\n    return this.client.get<Customer[]>(path);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Category } from '../models/category.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryGuard implements CanActivate {\r\n  constructor(private router : Router){}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    let enteredCategory = next.params['category'];\r\n    let validCategories : string[] = Object.keys(Category).filter(category=>isNaN(+category));\r\n    if(!validCategories.includes(enteredCategory)){\r\n      this.router.navigateByUrl(\"/not-found\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n}\r\n","export enum ClientType {\r\n    Administrator=\"Administrator\", Company=\"Company\", Customer=\"Customer\"\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LoginService } from './login.service';\r\nimport { Company } from '../models/company';\r\nimport { Coupon } from '../models/coupon';\r\nimport { Customer } from '../models/customer';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompanyService {\r\n  path = \"/company\"\r\n  constructor(private client : HttpClient, private loginService : LoginService) { }\r\n  public getCompanyDetails() {\r\n    const path : string = this.path + \"/company-details/\" + this.loginService.token;\r\n    return this.client.get<Company>(path);\r\n  }\r\n  public addCoupon(coupon : Coupon){\r\n    const path = this.path + \"/add-coupon/\" + this.loginService.token;\r\n    return this.client.post<Coupon>(path, coupon);\r\n  }\r\n  public updateCoupon(coupon : Coupon){\r\n    const path = this.path + \"/update-coupon/\" + this.loginService.token;\r\n    return this.client.post<Coupon>(path, coupon);\r\n  }\r\n  public deleteCoupon(id : number){\r\n    let path = this.path + \"/delete-coupon/\" + this.loginService.token;\r\n    path += \"/\"+id;\r\n    return this.client.delete(path,{responseType:\"text\"});\r\n  }\r\n  public getAllClients(){\r\n    const path = this.path + \"/all-clients/\" + this.loginService.token;\r\n    return this.client.get<Customer[]>(path);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LoginService } from './login.service';\r\nimport { Customer } from '../models/customer';\r\nimport { Coupon } from '../models/coupon';\r\nimport { Category } from '../models/category.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n  path = \"/customer\"\r\n  constructor(private client : HttpClient, private loginService : LoginService) { }\r\n  public getCustomerDetails(){\r\n    const path : string = this.path + \"/customer-details/\" + this.loginService.token;\r\n    return this.client.get<Customer>(path);\r\n  }\r\n\r\n  public getCouponById(id : number){\r\n    let path = this.path + \"/coupon-by-id/\" + this.loginService.token;\r\n    path += \"/\" + id;\r\n    return this.client.get<Coupon>(path);\r\n  }\r\n  public getCustomersByCoupon(id : number){\r\n    let path = this.path + \"/customers-by-coupon/\" + this.loginService.token;\r\n    path += \"/\" + id;\r\n    return this.client.get<Customer[]>(path);\r\n  }\r\n  public getAllCoupons(){\r\n    let path = this.path + \"/all-coupons/\" + this.loginService.token;\r\n    return this.client.get<Coupon[]>(path);\r\n  }\r\n  public getAllCouponsByCategory(category : Category){\r\n    let path = this.path + \"/coupons-by-category/\" + this.loginService.token;\r\n    return this.client.post<Coupon[]>(path, category);\r\n  }\r\n  public purchaseCoupon(coupon : Coupon){\r\n    let path = this.path + \"/purchase-coupon/\" + this.loginService.token;\r\n    return this.client.post(path, coupon, {responseType: \"text\"});\r\n  }\r\n}\r\n","import { Coupon } from 'src/app/models/coupon';\r\nimport { Injectable } from '@angular/core';\r\nimport {  HttpClient } from '@angular/common/http';\r\nimport { ClientType } from './client-type.enum';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Customer } from '../models/customer';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  path = \"/login\";\r\n  authenticated = 0;\r\n  clientType : string;\r\n  recentlyViewdIds: Set<number> = new Set();\r\n  constructor(private client : HttpClient, private snackBar : MatSnackBar, private router : Router) {\r\n    \r\n    this.loggedin();\r\n    this.recentlyViewdIds = new Set(JSON.parse(localStorage.getItem(\"last-viewed\")));\r\n   }\r\n  get token() : string{\r\n    return sessionStorage.getItem(\"token\") || \"guest\";\r\n  }\r\n  saveRecentlyViewed(){\r\n\r\n    localStorage.setItem(\"last-viewed\",JSON.stringify([...this.recentlyViewdIds]))\r\n  }\r\n  updateRecentlyViewed(id:number){\r\n    if(this.recentlyViewdIds.size >=5){\r\n      let temp = [...this.recentlyViewdIds];\r\n      temp.shift();\r\n      this.recentlyViewdIds = new Set( temp);\r\n    }\r\n    this.recentlyViewdIds.add(id);\r\n    this.saveRecentlyViewed();\r\n  }\r\n  getRecentlyViewed() {\r\n    return JSON.parse(localStorage.getItem(\"last-viewed\")) || [];\r\n  }\r\n  public login(email : string, password : string,clientType :  ClientType){\r\n    const path = this.path +\"/\"+ email +\"/\"+password+\"/\"+clientType;\r\n    \r\n    this.client.post(path, null,{responseType:\"text\"}).subscribe(\r\n      success =>{\r\n        this.snackBar.open(\"Login successfull\",null, {duration : 3000});\r\n        this.authenticated = 2;\r\n        this.clientType = clientType.toString();\r\n        sessionStorage.setItem(\"token\",success)\r\n        if(this.clientType == \"Company\"){\r\n          this.router.navigateByUrl(\"/company-profile\")\r\n        }else{\r\n          this.router.navigateByUrl(\"/home\");\r\n\r\n        }\r\n        \r\n      },\r\n      error=>{\r\n        let errorMessage = error.status == 0 ? \"Oops, Please try again later\" : error.error;\r\n      \r\n        this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    );\r\n  }\r\n  public logout() {\r\n    this.client.post(this.path + \"/logout/\" + sessionStorage.getItem(\"token\"), null, {responseType:\"text\"}).subscribe(\r\n      success => {\r\n        this.snackBar.open(success, null, {duration: 3000});\r\n        sessionStorage.setItem(\"token\",\"null\");\r\n        this.authenticated = 1;\r\n        this.clientType = null;\r\n        this.router.navigateByUrl(\"login\");\r\n      }, error =>{\r\n        let errorMessage = error.status == 0 ? \"Oops, try again later\" : error.error;\r\n        this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    )\r\n  }\r\n  public loggedin(){\r\n    const token : string = sessionStorage.getItem(\"token\") || \"null\";\r\n    const path = this.path + \"/loggedin/\" + token;\r\n    \r\n    this.client.post(path, null).subscribe(\r\n      success => {\r\n        if(typeof success == 'object'){\r\n          if(success.hasOwnProperty('firstName')){\r\n            this.clientType = \"Customer\";\r\n          }else{\r\n            this.clientType = \"Company\";\r\n          }\r\n        }else{\r\n          this.clientType = \"Administrator\";\r\n        }\r\n        this.authenticated = 2;\r\n        \r\n       \r\n      }, \r\n      error => {\r\n        \r\n        this.authenticated = 1;\r\n        this.router.navigateByUrl(\"/login\");\r\n        \r\n        sessionStorage.setItem(\"token\",\"guest\");\r\n      }\r\n    );\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginguardService implements CanActivate{\r\n\r\n  constructor(private loginService : LoginService, private router :Router) { }\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | import(\"@angular/router\").UrlTree | import(\"rxjs\").Observable<boolean | import(\"@angular/router\").UrlTree> | Promise<boolean | import(\"@angular/router\").UrlTree> {\r\n    \r\n    const token = sessionStorage.getItem(\"token\") || \"guest\";\r\n    this.loginService.loggedin();\r\n    if(token == \"guest\" ){\r\n      this.router.navigateByUrl(\"/login\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}