{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/addcompany/addcompany.component.ts","webpack:///src/app/components/addcompany/addcompany.component.html","webpack:///src/app/components/addcoupon/addcoupon.component.ts","webpack:///src/app/components/addcoupon/addcoupon.component.html","webpack:///src/app/components/addcustomer/addcustomer.component.ts","webpack:///src/app/components/addcustomer/addcustomer.component.html","webpack:///src/app/components/adminhome/adminhome.component.ts","webpack:///src/app/components/adminhome/adminhome.component.html","webpack:///src/app/components/allcompanies/allcompanies.component.ts","webpack:///src/app/components/allcompanies/allcompanies.component.html","webpack:///src/app/components/allcustomers/allcustomers.component.ts","webpack:///src/app/components/allcustomers/allcustomers.component.html","webpack:///src/app/components/companyhome/companyhome.component.ts","webpack:///src/app/components/companyhome/companyhome.component.html","webpack:///src/app/components/companyprofile/companyprofile.component.ts","webpack:///src/app/components/companyprofile/companyprofile.component.html","webpack:///src/app/components/coupon/coupon.component.ts","webpack:///src/app/components/coupon/coupon.component.html","webpack:///src/app/components/couponbycategory/couponbycategory.component.ts","webpack:///src/app/components/couponbycategory/couponbycategory.component.html","webpack:///src/app/components/customerhome/customerhome.component.ts","webpack:///src/app/components/customerhome/customerhome.component.html","webpack:///src/app/components/customerprofile/customerprofile.component.ts","webpack:///src/app/components/customerprofile/customerprofile.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/loading/loading.component.ts","webpack:///src/app/components/loading/loading.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/minicoupon/minicoupon.component.ts","webpack:///src/app/components/minicoupon/minicoupon.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/pagenotfound/pagenotfound.component.ts","webpack:///src/app/components/pagenotfound/pagenotfound.component.html","webpack:///src/app/models/category.enum.ts","webpack:///src/app/models/company.ts","webpack:///src/app/models/coupon.ts","webpack:///src/app/models/customer.ts","webpack:///src/app/services/admin.service.ts","webpack:///src/app/services/category.guard.ts","webpack:///src/app/services/client-type.enum.ts","webpack:///src/app/services/company.service.ts","webpack:///src/app/services/customer.service.ts","webpack:///src/app/services/login.service.ts","webpack:///src/app/services/loginguard.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","canActivate","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AddcompanyComponent","fb","adminService","snackBar","dialog","company","visibility","type","disableDeleteButton","newCompany","group","value","disabled","name","required","email","password","confirmp","validatePasswordsMatch","setValue","_id","_name","_email","_password","disable","updateCompany","addCompany","deleteCompany","subscribe","success","snackRef","open","onAction","close","error","errorMessage","status","enable","_coupons","control","parent","get","confirmPassword","passwordsMatchError","controls","showPassword","saveCompany","AddcouponComponent","companyService","coupon","header","possibleCategories","Object","values","filter","category","isNaN","getCompanyDetails","companyId","getCompany","newCoupon","description","startDate","validateStartDate","endDate","validateEndDate","amount","min","price","image","_title","_category","_description","_startDate","_endDate","_originalAmount","_price","_image","markAsTouched","Date","today","touched","updateValueAndValidity","getTime","invalidStartDate","invalidEndDate","updateCoupon","addCoupon","deleteCoupon","saveCoupon","AddcustomerComponent","customer","newCustomer","fname","lname","_firstName","_lastName","passwordMatchError","updateCustomer","addCustomer","deleteCustomer","saveCustomer","AdminhomeComponent","AllcompaniesComponent","displayedColumns","getAllCompanies","companies","getCompanies","dataSource","sort","paginator","config","autoFocus","disableClose","width","data","dialogRef","afterClosed","result","ngOnInit","search","trim","toLowerCase","filterSearch","AllcustomersComponent","getAllCustomers","customers","getCustomers","CompanyhomeComponent","duration","CompanyprofileComponent","searchOption","coupons","getCoupons","filterPredicate","toString","indexOf","some","element","getAllClients","clients","client","c","length","createCoupon","clearSearch","CouponComponent","activeRoute","customerService","router","loginService","disableBuyButton","recentlyViewedCoupons","couponId","snapshot","params","getCouponById","updateRecentlyViewed","getCoupon","setInterval","countDown","remainingTime","getCustomersByCoupon","otherCustomers","otherCustomersCoupons","map","reduce","acc","curr","concat","filterDuplicates","sharedCoupon","sortByBought","slice","navigateByUrl","showRecentlyViewed","ids","getRecentlyViewed","forEach","push","purchaseCoupon","every","coup","a","b","_bought","newCoupons","Array","newCouponsId","includes","now","timeLeftMillis","timeLeftSeconds","Math","floor","timeLeftHours","timeLeftMinutes","CouponbycategoryComponent","text","Food","categoryName","getAllCouponsByCategory","CustomerhomeComponent","numbers","autoComplete","categories","limitedTimeCoupons","topPicksCoupons","topPicksQualifier","optionsB","getAllCoupons","electricityCoupons","foodCoupons","spaCoupons","petsCoupons","tourismCoupons","furnitureCoupons","fashionCoupons","limitedTime","sortByLimitedTime","searchListener","CustomerprofileComponent","getCustomerDetails","getCustomer","HomeComponent","LoadingComponent","LoginComponent","clientTypes","prop","loginForm","clientType","login","MinicouponComponent","imgPlaceHolder","boughtBy","NavbarComponent","t","Administrator","goHome","PagenotfoundComponent","Category","Company","obj","assign","Coupon","originalAmount","currentAmount","bought","Customer","firstName","lastName","AdminService","token","post","responseType","providedIn","CategoryGuard","next","state","enteredCategory","validCategories","ClientType","CompanyService","CustomerService","LoginService","authenticated","recentlyViewdIds","Set","loggedin","JSON","parse","localStorage","getItem","setItem","stringify","size","temp","shift","add","saveRecentlyViewed","sessionStorage","hasOwnProperty","LoginguardService","route","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { LoginguardService } from './services/loginguard.service';\r\nimport { AllcompaniesComponent } from './components/allcompanies/allcompanies.component';\r\nimport { AllcustomersComponent } from './components/allcustomers/allcustomers.component';\r\nimport { CustomerprofileComponent } from './components/customerprofile/customerprofile.component';\r\nimport { CompanyprofileComponent } from './components/companyprofile/companyprofile.component';\r\nimport { CouponComponent } from './components/coupon/coupon.component';\r\nimport { PagenotfoundComponent } from './components/pagenotfound/pagenotfound.component';\r\nimport { LoadingComponent } from './components/loading/loading.component';\r\nimport { CouponbycategoryComponent } from './components/couponbycategory/couponbycategory.component';\r\nimport { CategoryGuard } from './services/category.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: \"\", redirectTo:\"home\",pathMatch:\"full\",canActivate : [LoginguardService]},\r\n  {path: \"home\", component: HomeComponent, canActivate : [LoginguardService]},\r\n  {path: \"login\", component: LoginComponent},\r\n  {path: \"all-companies\", component:AllcompaniesComponent, canActivate: [LoginguardService]},\r\n  {path: \"all-customers\", component:AllcustomersComponent, canActivate: [LoginguardService]},\r\n  {path: \"customer-profile\", component:CustomerprofileComponent, canActivate: [LoginguardService]},\r\n  {path: \"company-profile\", component:CompanyprofileComponent, canActivate: [LoginguardService]},\r\n  {path: \"loading/:id\", component: LoadingComponent, canActivate: [LoginguardService]},\r\n  {path: \"coupon/:id\", component: CouponComponent, canActivate: [LoginguardService]},\r\n  {path: \"category/:category\",component:CouponbycategoryComponent, canActivate: [LoginguardService,CategoryGuard]},\r\n  { path: \"not-found\" , component:PagenotfoundComponent},\r\n  {path: \"**\", component:PagenotfoundComponent },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'CouponsV3';\r\n}\r\n","<div class=\"container\">\r\n  <nav>\r\n    <app-navbar></app-navbar>\r\n  </nav>\r\n  <main>\r\n    <router-outlet></router-outlet>\r\n  </main>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\r\n\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\"\r\nimport { MatTabsModule} from '@angular/material/tabs';\r\nimport { MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\r\n\r\n\r\nimport { AllcompaniesComponent } from './components/allcompanies/allcompanies.component';\r\nimport { AllcustomersComponent } from './components/allcustomers/allcustomers.component';\r\nimport { AddcompanyComponent } from './components/addcompany/addcompany.component';\r\nimport { AddcustomerComponent } from './components/addcustomer/addcustomer.component';\r\nimport { CustomerprofileComponent } from './components/customerprofile/customerprofile.component';\r\nimport { CompanyprofileComponent } from './components/companyprofile/companyprofile.component';\r\nimport { AddcouponComponent } from './components/addcoupon/addcoupon.component';\r\nimport { CustomerhomeComponent } from './components/customerhome/customerhome.component';\r\nimport { CompanyhomeComponent } from './components/companyhome/companyhome.component';\r\nimport { AdminhomeComponent } from './components/adminhome/adminhome.component';\r\nimport { CouponComponent } from './components/coupon/coupon.component';\r\nimport { PagenotfoundComponent } from './components/pagenotfound/pagenotfound.component';\r\nimport { MinicouponComponent } from './components/minicoupon/minicoupon.component';\r\nimport { LoadingComponent } from './components/loading/loading.component';\r\nimport { CouponbycategoryComponent } from './components/couponbycategory/couponbycategory.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n  \r\n    AllcompaniesComponent,\r\n    AllcustomersComponent,\r\n    AddcompanyComponent,\r\n    AddcustomerComponent,\r\n    \r\n    CustomerprofileComponent,\r\n    CompanyprofileComponent,\r\n    AddcouponComponent,\r\n    CustomerhomeComponent,\r\n    CompanyhomeComponent,\r\n    AdminhomeComponent,\r\n    CouponComponent,\r\n    PagenotfoundComponent,\r\n    MinicouponComponent,\r\n    LoadingComponent,\r\n    CouponbycategoryComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule, \r\n    FormsModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatSnackBarModule,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatAutocompleteModule\r\n\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { Company } from 'src/app/models/company';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-addcompany',\r\n  templateUrl: './addcompany.component.html',\r\n  styleUrls: ['./addcompany.component.css']\r\n})\r\nexport class AddcompanyComponent implements OnInit {\r\n  visibility = \"visibility\";\r\n  type = \"password\";\r\n  title = \"Add Company\";\r\n  disableDeleteButton = false;\r\n  newCompany : FormGroup;\r\n  constructor(private fb : FormBuilder, private adminService : AdminService, \r\n              private snackBar : MatSnackBar, private dialog : MatDialogRef<AddcompanyComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public company : Company) { }\r\n\r\n  ngOnInit(): void {\r\n    this.newCompany = this.fb.group({\r\n      id: [{value:\"\",disabled:true},[]],\r\n      name: [\"\",[Validators.required]],\r\n      email: [\"\", [Validators.required,Validators.email]],\r\n      password: [\"\", [Validators.required]],\r\n      confirmp : [\"\",[Validators.required, this.validatePasswordsMatch]]\r\n    });\r\n    if(this.company){\r\n      this.newCompany.setValue({id : this.company._id,name: this.company._name, email: this.company._email,\r\n                                password: this.company._password,confirmp:this.company._password});\r\n      this.name.disable();\r\n      this.title = \"Update Company\";\r\n    }\r\n  }\r\n  saveCompany(){\r\n    if(this.company){\r\n      this.updateCompany();\r\n    }else{\r\n      this.addCompany()\r\n    }\r\n  }\r\n  deleteCompany(){\r\n    this.newCompany.disable();\r\n    this.disableDeleteButton=true;\r\n    this.adminService.deleteCompany(this.id.value).subscribe(\r\n      success => {\r\n        const snackRef = this.snackBar.open(\"Company Deleted Successfuly!\",\"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      },\r\n      error => {\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0){\r\n          errorMessage = \"oops, try again later\", \"dismiss\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n        this.newCompany.enable()\r\n        this.disableDeleteButton = false;\r\n      }\r\n    )\r\n  }\r\n  addCompany(){\r\n    this.newCompany.disable();\r\n    const company : Company = new Company(0,this.name.value,this.email.value,this.password.value) ;\r\n    this.adminService.addCompany(company).subscribe(\r\n      success =>{\r\n        const snackRef = this.snackBar.open(\"New Company Succesfully added!\",\"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      }, error => {\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0){\r\n          errorMessage = \"oops, try again later\", \"dismiss\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.newCompany.enable()\r\n        })\r\n\r\n      }\r\n    )\r\n  }\r\n  updateCompany(){\r\n    this.newCompany.disable();\r\n    this.disableDeleteButton = true;\r\n    const company : Company = new Company(this.id.value,this.name.value,this.email.value,this.password.value,this.company._coupons) ;\r\n    this.adminService.updateCompany(company).subscribe(\r\n      success =>{\r\n        const snackRef = this.snackBar.open(\"Company Succesfully Updated!\",\"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      }, error => {\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0){\r\n          errorMessage = \"oops, try again later\", \"dismiss\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n\r\n          this.newCompany.enable()\r\n          this.disableDeleteButton=false;\r\n        })\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  close(){\r\n    this.dialog.close();\r\n  }\r\n  validatePasswordsMatch(control : AbstractControl){\r\n    \r\n    const password : string = control.parent?.get(\"password\").value;\r\n    const confirmPassword : string = control.value;\r\n    if(password != confirmPassword){\r\n      return {passwordsMatchError : true}\r\n    }\r\n  }\r\n  showPassword(){\r\n    if(this.type == \"password\"){\r\n      this.type = \"text\";\r\n      this.visibility = \"visibility_off\"\r\n    }else{\r\n      this.type = \"password\";\r\n      this.visibility = \"visibility\";\r\n    }\r\n  }\r\n  get id(){\r\n    return this.newCompany.controls['id'];\r\n  }\r\n  get name(){\r\n    return this.newCompany.controls['name'];\r\n  }\r\n  get email(){\r\n    return this.newCompany.controls['email'];\r\n  }\r\n  get password(){\r\n    return this.newCompany.controls['password'];\r\n  }\r\n  get confirmp(){\r\n    return this.newCompany.controls['confirmp'];\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div >\r\n        <mat-toolbar color=\"accent\">\r\n            <h2>{{title}}</h2>\r\n            <span class=\"fill-toolbar\"></span>\r\n            <button mat-icon-button (click)=\"close()\"><mat-icon>cancel</mat-icon></button>\r\n        </mat-toolbar>\r\n        <form [formGroup]=\"newCompany\">\r\n            <mat-form-field *ngIf=\"company\">\r\n                <mat-label>ID</mat-label>\r\n                <input matInput formControlName=\"id\">\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Company Name</mat-label>\r\n                <input matInput placeholder=\"Name\" formControlName=\"name\" />\r\n                <mat-error *ngIf=\"name.errors?.required\">Name is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Email</mat-label>\r\n                <input matInput type=\"email\" placeholder=\"e.g. Boba@Bola.com\" formControlName=\"email\" />\r\n                <mat-error *ngIf=\"email.errors?.required\">Email is required</mat-error>\r\n                <mat-error *ngIf=\"email.errors?.email\">Invalid email</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Password</mat-label>\r\n                <input matInput [type]=\"type\" placeholder=\"your password\" formControlName=\"password\" />\r\n                <button mat-icon-button matSuffix (click)=\"showPassword()\"><mat-icon>{{visibility}}</mat-icon></button>\r\n                <mat-error>Password is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Confirm Password</mat-label>\r\n                <input matInput [type]=\"type\" placeholder=\"confirm your password\" formControlName=\"confirmp\" />\r\n                <mat-error>Password is required</mat-error>\r\n                <mat-error *ngIf=\"confirmp.errors?.passwordsMatchError\">Passwords need to match</mat-error>\r\n\r\n            </mat-form-field>\r\n            \r\n            <button mat-raised-button [disabled]=\"!newCompany.valid\" (click)=\"saveCompany()\">{{title}}</button>\r\n            <button mat-raised-button [disabled]=\"disableDeleteButton\" (click)=\"deleteCompany()\" *ngIf=\"company\">Delete Company</button>\r\n        </form>\r\n    </div>\r\n    </div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\nimport { CompanyService } from 'src/app/services/company.service';\r\nimport { Coupon } from 'src/app/models/coupon';\r\nimport { Category } from 'src/app/models/category.enum';\r\nimport { Company } from 'src/app/models/company';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-addcoupon',\r\n  templateUrl: './addcoupon.component.html',\r\n  styleUrls: ['./addcoupon.component.css']\r\n})\r\nexport class AddcouponComponent implements OnInit {\r\n  header : string = \"Add Coupon\";\r\n  newCoupon : FormGroup;\r\n  disableDeleteButton = false;\r\n  companyId : number;\r\n  possibleCategories = Object.values(Category).filter(category => isNaN(+category));\r\n  constructor(private dialog : MatDialogRef<AddcouponComponent>,\r\n              private companyService : CompanyService,\r\n              private fb : FormBuilder, private snackBar : MatSnackBar,\r\n              @Inject(MAT_DIALOG_DATA) public coupon : Coupon) { }\r\n\r\n  ngOnInit(): void {\r\n    this.companyService.getCompanyDetails().subscribe(\r\n      success => {\r\n        this.companyId = Company.getCompany(success)._id;\r\n      },\r\n      error =>{\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0|| error.status == 500){\r\n          errorMessage = \"oops, try again later\", \"dismiss\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    )\r\n    this.newCoupon = this.fb.group({\r\n      title: [\"\",[Validators.required]],\r\n      category: [\"\",[Validators.required]],\r\n      description: [\"\",[Validators.required]],\r\n      startDate: [\"\",[Validators.required,this.validateStartDate]],\r\n      endDate: [\"\",[Validators.required,this.validateEndDate]],\r\n      amount: [\"\",[Validators.required,Validators.min(1)]],\r\n      price: [\"\",[Validators.required,Validators.min(1)]],\r\n      image: [\"\",[Validators.required]]\r\n    });\r\n    if(this.coupon){\r\n      this.newCoupon.setValue({title: this.coupon._title,category: this.coupon._category,\r\n                              description: this.coupon._description,startDate:this.coupon._startDate,\r\n                              endDate:this.coupon._endDate,amount:this.coupon._originalAmount,price:this.coupon._price,\r\n                              image:this.coupon._image});\r\n      this.header = \"Update Coupon\";\r\n      for(let control in this.newCoupon.controls){\r\n        this.newCoupon.controls[control].markAsTouched();\r\n      }\r\n    }\r\n  }\r\n  validateStartDate(control : AbstractControl){\r\n    const startDate = new Date(control.value);\r\n    const today = new Date();\r\n    const endDate = control.parent?.get(\"endDate\");\r\n    if(endDate && endDate.touched){\r\n      endDate.updateValueAndValidity();\r\n    }\r\n    if(startDate.getTime() < today.getTime()){\r\n      return {invalidStartDate:true};\r\n    }\r\n  }\r\n  validateEndDate(control : AbstractControl){\r\n    const startDate = new Date(control.parent?.get(\"startDate\").value);\r\n    const endDate = new Date(control.value);\r\n    if(startDate.getTime() > endDate.getTime()){\r\n      return {invalidEndDate:true};\r\n    }\r\n  }\r\n  close(){\r\n    this.dialog.close()\r\n  }\r\n  saveCoupon(){\r\n    if(this.coupon){\r\n      this.updateCoupon();\r\n    }else{\r\n      this.addCoupon();\r\n    }\r\n  }\r\n  addCoupon(){\r\n    this.newCoupon.disable();\r\n    const category : Category = this.category.value;\r\n    const coupon : Coupon = new Coupon(0, this.companyId,this.category.value,this.title.value,\r\n                                        this.description.value,this.startDate.value,this.endDate.value,\r\n                                        this.amount.value,this.amount.value,this.price.value,this.image.value);\r\n    this.companyService.addCoupon(coupon).subscribe(\r\n      success => {\r\n        const snackRef = this.snackBar.open(\"New Coupon added successfully\",\"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      },\r\n      error => {\r\n        let errorMessage : string = error.error;\r\n        if(error.status ==0 || error.status ==500){\r\n          errorMessage = \"Oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage,\"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.newCoupon.enable();\r\n        })\r\n      }\r\n    )\r\n  }\r\n  updateCoupon(){\r\n    this.newCoupon.disable();\r\n    this.disableDeleteButton = true;\r\n    const coupon : Coupon = new Coupon(this.coupon._id, this.companyId,this.category.value,this.title.value,\r\n                                        this.description.value,this.startDate.value,this.endDate.value,\r\n                                        this.amount.value,this.amount.value,this.price.value,this.image.value);\r\n    this.companyService.updateCoupon(coupon).subscribe(\r\n      success => {\r\n        const snackRef = this.snackBar.open(\"Coupon updated successfully\",\"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      },\r\n      error => {\r\n        let errorMessage : string = error.error;\r\n        if(error.status ==0 || error.status ==500){\r\n          errorMessage = \"Oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage,\"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.newCoupon.enable();\r\n          this.disableDeleteButton = false;\r\n        })\r\n      }\r\n    )\r\n  }\r\n  deleteCoupon(){\r\n    this.newCoupon.disable();\r\n    this.disableDeleteButton = true;\r\n    this.companyService.deleteCoupon(this.coupon._id).subscribe(\r\n      success => {\r\n        const snackRef = this.snackBar.open(success,\"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      },\r\n      error => {\r\n        let errorMessage = error.error;\r\n        if(error.status == 0 || error.status == 500){\r\n          errorMessage = \"Oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.newCoupon.enable();\r\n          this.disableDeleteButton = false;\r\n        })\r\n      }\r\n    )\r\n    \r\n  }\r\n  get id(){\r\n    return this.newCoupon.controls['id'];\r\n  }\r\n  get title(){\r\n    return this.newCoupon.controls['title'];\r\n  }\r\n  get description(){\r\n    return this.newCoupon.controls['description'];\r\n  }\r\n  get startDate(){\r\n    return this.newCoupon.controls['startDate'];\r\n  }\r\n  get endDate(){\r\n    return this.newCoupon.controls['endDate'];\r\n  }\r\n  get amount(){\r\n    return this.newCoupon.controls['amount'];\r\n  }\r\n  get price(){\r\n    return this.newCoupon.controls['price'];\r\n  }\r\n  get category(){\r\n    return this.newCoupon.controls['category'];\r\n  }\r\n  get image(){\r\n    return this.newCoupon.controls['image'];\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div>\r\n        <mat-toolbar color=\"accent\">\r\n            <h2>{{header}}</h2>\r\n            <span class=\"fill-toolbar\"></span>\r\n            <button mat-icon-button (click)=\"close()\">\r\n                <mat-icon>cancel</mat-icon>\r\n            </button>\r\n        </mat-toolbar>\r\n        <form [formGroup]=\"newCoupon\">\r\n\r\n            <mat-form-field>\r\n                <mat-label>Title</mat-label>\r\n                <input matInput placeholder=\"Title\" formControlName=\"title\" />\r\n                <mat-error>Title is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Category</mat-label>\r\n                <mat-select formControlName=\"category\">\r\n                    <mat-option *ngFor=\"let category of possibleCategories\" [value]=\"category\">\r\n                        {{category}}</mat-option>\r\n                </mat-select>\r\n                <mat-error>Category is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Description</mat-label>\r\n                <textarea matInput formControlName=\"description\"></textarea>\r\n\r\n                <mat-error>Description is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Start Date</mat-label>\r\n                <input matInput type=\"date\" (change)=\"validateEndDate(endDate)\" formControlName=\"startDate\" />\r\n\r\n                <mat-error *ngIf=\"startDate.errors?.required\">Start Date is required</mat-error>\r\n                <mat-error *ngIf=\"startDate.errors?.invalidStartDate\">Start Date must be in the future</mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <mat-label>End Date</mat-label>\r\n                <input matInput type=\"date\" formControlName=\"endDate\" />\r\n                <mat-error *ngIf=\"endDate.errors?.required\">End Date is required</mat-error>\r\n                <mat-error *ngIf=\"endDate.errors?.invalidEndDate\">End Date must be after Start Date</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Amount</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"amount\" />\r\n                <mat-error>Amount is required</mat-error>\r\n                <mat-error *ngIf=\"startDate.errors?.min\">Amount must be positive</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Price</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"price\" />\r\n                <mat-error>Price is required</mat-error>\r\n                <mat-error *ngIf=\"startDate.errors?.min\">Price must be positive</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Image</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"image\" />\r\n                <mat-error>Image is required</mat-error>\r\n            </mat-form-field>\r\n            <div class=\"actions\">\r\n                <button mat-raised-button [disabled]=\"!newCoupon.valid\" (click)=\"saveCoupon()\">{{header}}</button>\r\n                <button mat-raised-button [disabled]=\"disableDeleteButton\" (click)=\"deleteCoupon()\" *ngIf=\"coupon\">Delete Coupon</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\nimport { Admin } from 'src/app/models/admin';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Customer } from 'src/app/models/customer';\r\n\r\n@Component({\r\n  selector: 'app-addcustomer',\r\n  templateUrl: './addcustomer.component.html',\r\n  styleUrls: ['./addcustomer.component.css']\r\n})\r\nexport class AddcustomerComponent implements OnInit {\r\n  visibility = \"visibility\";\r\n  type = \"password\";\r\n  title = \"Add Customer\";\r\n  newCustomer : FormGroup;\r\n  disableDeleteButton = false;\r\n  constructor(private fb: FormBuilder, private adminService : AdminService,\r\n              private snackBar : MatSnackBar, private dialog : MatDialogRef<AddcustomerComponent>,\r\n              @Inject(MAT_DIALOG_DATA)public customer :Customer) { }\r\n\r\n  ngOnInit(): void {\r\n    this.newCustomer = this.fb.group({\r\n      id: [{value:\"\",disabled:true},[]],\r\n      fname : [\"\",[Validators.required]],\r\n      lname: [\"\",[Validators.required]],\r\n      email: [\"\",[Validators.required]],\r\n      password: [\"\",[Validators.required]],\r\n      confirmp: [\"\",[Validators.required, this.validatePasswordsMatch]]\r\n    })\r\n    if(this.customer){\r\n      this.newCustomer.setValue({id:this.customer._id,fname:this.customer._firstName,lname:this.customer._lastName,\r\n                                email: this.customer._email, password:this.customer._password,confirmp:this.customer._password});\r\n      this.title = \"Update Customer\";                          \r\n    }\r\n  }\r\n\r\n  validatePasswordsMatch(control : AbstractControl){\r\n    const password : string = control.parent?.get(\"password\").value;\r\n    const confirmPassword : string = control.value;\r\n    if(password != confirmPassword){\r\n      return {passwordMatchError: true};\r\n    }\r\n    \r\n  }\r\n  saveCustomer(){\r\n    if(this.customer){\r\n      this.updateCustomer();\r\n    }else{\r\n      this.addCustomer()\r\n    }\r\n  }\r\n  addCustomer(){\r\n    this.newCustomer.disable();\r\n    const customer : Customer = new Customer(0,this.fname.value,this.lname.value,this.email.value,this.password.value);\r\n    this.adminService.addCustomer(customer).subscribe(\r\n      success =>{\r\n        const snackRef = this.snackBar.open(\"New Customer added succesfully!\", \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      }, error =>{\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0 || error.status == 500){\r\n          errorMessage = \"oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.newCustomer.enable();\r\n        })\r\n      }\r\n    )\r\n  }\r\n  updateCustomer(){\r\n    this.newCustomer.disable();\r\n    this.disableDeleteButton = true;\r\n    const customer : Customer = new Customer(this.id.value,this.fname.value,this.lname.value,this.email.value,this.password.value, this.customer._coupons);\r\n    this.adminService.updateCustomer(customer).subscribe(\r\n      success =>{\r\n        const snackRef = this.snackBar.open(\"Customer updated succesfully!\", \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      }, error =>{\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0 || error.status == 500){\r\n          errorMessage = \"oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.newCustomer.enable();\r\n          this.disableDeleteButton = false;\r\n        })\r\n      }\r\n    )\r\n  }\r\n  deleteCustomer(){\r\n    this.newCustomer.disable();\r\n    this.disableDeleteButton = true;\r\n    this.adminService.deleteCustomer(this.id.value).subscribe(\r\n      success =>{\r\n        const snackRef = this.snackBar.open(\"Customer deleted succesfully\", \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.close();\r\n        })\r\n      }, error =>{\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0 || error.status == 500){\r\n          errorMessage = \"oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n        snackRef.onAction().subscribe( ()=>{\r\n          this.newCustomer.enable();\r\n          this.disableDeleteButton = false;\r\n        })\r\n      }\r\n    )\r\n  }\r\n  showPassword(){\r\n    if(this.type == \"password\"){\r\n      this.type = \"text\";\r\n      this.visibility = \"visibility_off\";\r\n    }else{\r\n      this.type = \"password\";\r\n      this.visibility = \"visibility\";\r\n    }\r\n  }\r\n  close(){\r\n    this.dialog.close();\r\n  }\r\n  get id(){\r\n    return this.newCustomer.controls['id'];\r\n  }\r\n  get fname(){\r\n    return this.newCustomer.controls['fname'];\r\n  }\r\n  get lname(){\r\n    return this.newCustomer.controls['lname'];\r\n  }\r\n  get email(){\r\n    return this.newCustomer.controls['email'];\r\n  }\r\n  get password(){\r\n    return this.newCustomer.controls['password'];\r\n  }\r\n  get confirmp(){\r\n    return this.newCustomer.controls['confirmp'];\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div >\r\n        <mat-toolbar color=\"accent\">\r\n            <h2>{{title}}</h2>\r\n            <span class=\"fill-toolbar\"></span>\r\n            <button mat-icon-button (click)=\"close()\"><mat-icon>cancel</mat-icon></button>\r\n        </mat-toolbar>\r\n        <form [formGroup]=\"newCustomer\">\r\n            <mat-form-field *ngIf=\"customer\">\r\n                <mat-label>ID</mat-label>\r\n                <input matInput formControlName=\"id\">\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>First Name</mat-label>\r\n                <input matInput placeholder=\"First Name\" formControlName=\"fname\" />\r\n                <mat-error *ngIf=\"fname.errors?.required\">First Name is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Last Name</mat-label>\r\n                <input matInput placeholder=\"Last Name\" formControlName=\"lname\" />\r\n                <mat-error *ngIf=\"lname.errors?.required\">Last Name is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Email</mat-label>\r\n                <input matInput type=\"email\" placeholder=\"e.g. Boba@Bola.com\" formControlName=\"email\" />\r\n                <mat-error *ngIf=\"email.errors?.required\">Email is required</mat-error>\r\n                <mat-error *ngIf=\"email.errors?.email\">Invalid email</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Password</mat-label>\r\n                <input matInput [type]=\"type\" placeholder=\"your password\" formControlName=\"password\" />\r\n                <button mat-icon-button matSuffix (click)=\"showPassword()\"><mat-icon>{{visibility}}</mat-icon></button>\r\n                <mat-error>Password is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Confirm Password</mat-label>\r\n                <input matInput [type]=\"type\" placeholder=\"confirm your password\" formControlName=\"confirmp\" />\r\n                <mat-error>Password is required</mat-error>\r\n                <mat-error *ngIf=\"confirmp.errors?.passwordsMatchError\">Passwords need to match</mat-error>\r\n\r\n            </mat-form-field>\r\n            \r\n            <button mat-raised-button [disabled]=\"!newCustomer.valid\" (click)=\"saveCustomer()\">{{title}}</button>\r\n            <button mat-raised-button [disabled]=\"disableDeleteButton\" (click)=\"deleteCustomer()\" *ngIf=\"customer\">Delete Customer</button>\r\n        </form>\r\n    </div>\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-adminhome',\r\n  templateUrl: './adminhome.component.html',\r\n  styleUrls: ['./adminhome.component.css']\r\n})\r\nexport class AdminhomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    \r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Company } from 'src/app/models/company';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { AddcompanyComponent } from '../addcompany/addcompany.component';\r\n\r\n@Component({\r\n  selector: 'app-allcompanies',\r\n  templateUrl: './allcompanies.component.html',\r\n  styleUrls: ['./allcompanies.component.css']\r\n})\r\nexport class AllcompaniesComponent implements OnInit {\r\n\r\n  companies : Company[];\r\n  dataSource;\r\n  search;\r\n  displayedColumns : string[] = [\"id\", \"name\", \"email\", \"password\", \"coupons\",\"actions\"];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator : MatPaginator;\r\n  constructor(private adminService : AdminService, private snackBar:MatSnackBar, private dialog : MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.adminService.getAllCompanies().subscribe(\r\n      success => {\r\n        const companies : Company[] = Company.getCompanies(success);\r\n        this.companies = companies;\r\n        this.dataSource = new MatTableDataSource(this.companies);\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n      }, error => {\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0){\r\n          errorMessage = \"oops, try again later\";\r\n        }\r\n        this.snackBar.open(errorMessage,\"dismiss\");\r\n      }\r\n    )\r\n  }\r\n  showCompany(company){\r\n    let config : MatDialogConfig = new MatDialogConfig();\r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"60%\";\r\n    config.data = company;\r\n    const dialogRef = this.dialog.open(AddcompanyComponent,config);\r\n    dialogRef.afterClosed().subscribe( result =>{\r\n      this.ngOnInit();\r\n    })\r\n    \r\n  }\r\n  addCompany(){\r\n    let config: MatDialogConfig = new MatDialogConfig();\r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"60%\";\r\n    const dialogRef = this.dialog.open(AddcompanyComponent,config);\r\n    dialogRef.afterClosed().subscribe( result =>{\r\n      this.ngOnInit();\r\n    })\r\n  }\r\n  filterSearch(){\r\n    this.dataSource.filter = this.search.trim().toLowerCase();\r\n  }\r\n  clearSearch(){\r\n    this.search = \"\";\r\n    this.filterSearch();\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"header\">\r\n        <h2>List of companies :</h2>\r\n        <h3 *ngIf=\"dataSource?.data\">{{dataSource.data.length}} companies</h3>\r\n    </div>\r\n    <section class=\"section\">\r\n        <button mat-raised-button (click)=\"addCompany()\">Add Company</button>\r\n        <mat-form-field>\r\n            <input matInput placeholder=\"search\" class=\"search\" [(ngModel)]=\"search\" (keyup)=\"filterSearch()\" />\r\n            <button mat-icon-button matSuffix *ngIf=\"search\" (click)=\"clearSearch()\">\r\n                <mat-icon>\r\n                    close\r\n                </mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n        \r\n        <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n            <ng-container matColumnDef=\"id\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._id}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"name\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Company Name</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._name}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"email\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._email}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"password\">\r\n                <mat-header-cell *matHeaderCellDef>Password</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._password}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"coupons\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Number of Coupons</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._coupons?.length || 0}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"actions\">\r\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">\r\n                    <button mat-icon-button (click)=\"showCompany(element)\">\r\n                        <mat-icon>launch</mat-icon>\r\n                    </button>\r\n                </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"loading\">\r\n                <mat-footer-cell *matFooterCellDef colspan=\"5\">\r\n                    <mat-spinner color=\"accent\" [diameter]=\"30\"></mat-spinner>\r\n                </mat-footer-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"noData\">\r\n                <mat-footer-cell *matFooterCellDef colspan=\"5\">\r\n                    No Companies to show!\r\n                </mat-footer-cell>\r\n            </ng-container>\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n            <mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide':dataSource!=null}\"></mat-footer-row>\r\n            <mat-footer-row *matFooterRowDef=\"['noData']\"\r\n                [ngClass]=\"{'hide': !(dataSource !=null && dataSource.data.length == 0)}\"></mat-footer-row>\r\n        </mat-table>\r\n        <mat-paginator [pageSizeOptions]=\"[5,10,20,100]\" [pageSize]=\"10\"></mat-paginator>\r\n    </section>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Customer } from 'src/app/models/customer';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AddcustomerComponent } from '../addcustomer/addcustomer.component';\r\n\r\n@Component({\r\n  selector: 'app-allcustomers',\r\n  templateUrl: './allcustomers.component.html',\r\n  styleUrls: ['./allcustomers.component.css']\r\n})\r\nexport class AllcustomersComponent implements OnInit {\r\n  customers : Customer[];\r\n  dataSource ;\r\n  search ;\r\n  displayedColumns : string[] = [\"id\",\"firstName\",\"lastName\",\"email\",\"password\",\"coupons\",\"actions\"];\r\n  @ViewChild(MatSort) sort : MatSort;\r\n  @ViewChild(MatPaginator) paginator : MatPaginator;\r\n  constructor( private adminService : AdminService,\r\n               private snackBar : MatSnackBar, \r\n               private dialog : MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.adminService.getAllCustomers().subscribe(\r\n      success =>{\r\n        const customers : Customer[] = Customer.getCustomers(success);\r\n        this.customers = customers;\r\n    \r\n        this.dataSource = new MatTableDataSource(this.customers);\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n      }, error =>{\r\n        let errorMessage : string = error.error;\r\n        if(error.status == 0 || error.status == 500){\r\n          errorMessage = \"oops, try again later\";\r\n        }\r\n        this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    )\r\n  }\r\n  showCustomer(customer){\r\n    let config : MatDialogConfig = new MatDialogConfig();\r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"60%\";\r\n    config.data = customer;\r\n    const dialogRef = this.dialog.open(AddcustomerComponent,config);\r\n    dialogRef.afterClosed().subscribe( result => {\r\n      this.ngOnInit();\r\n    })\r\n  }\r\n  addCustomer(){\r\n    let config : MatDialogConfig = new MatDialogConfig();\r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"60%\";\r\n    const dialogRef = this.dialog.open(AddcustomerComponent,config);\r\n    dialogRef.afterClosed().subscribe( result => {\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n  filterSearch(){\r\n    this.dataSource.filter = this.search.trim().toLowerCase();\r\n  }\r\n  clearSearch(){\r\n    this.search = \"\";\r\n    this.filterSearch();\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"header\">\r\n        <h2>List of customers :</h2>\r\n        <h3 *ngIf=\"dataSource?.data\">{{dataSource.data.length}} customers</h3>\r\n    </div>\r\n    <section class=\"section\">\r\n        <button mat-raised-button (click)=\"addCustomer()\">Add Customer</button>\r\n        <mat-form-field>\r\n            <input matInput placeholder=\"search\" class=\"search\" [(ngModel)]=\"search\" (keyup)=\"filterSearch()\" />\r\n            <button mat-icon-button matSuffix *ngIf=\"search\" (click)=\"clearSearch()\">\r\n                <mat-icon>\r\n                    close\r\n                </mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n        \r\n        <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n            <ng-container matColumnDef=\"id\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._id}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"firstName\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>First Name</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._firstName}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"lastName\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Last Name</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._lastName}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"email\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._email}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"password\">\r\n                <mat-header-cell *matHeaderCellDef>Password</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._password}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"coupons\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Number of Coupons</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">{{element._coupons.length}}</mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"actions\">\r\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">\r\n                    <button mat-icon-button (click)=\"showCustomer(element)\">\r\n                        <mat-icon>launch</mat-icon>\r\n                    </button>\r\n                </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"loading\">\r\n                <mat-footer-cell *matFooterCellDef colspan=\"5\">\r\n                    <mat-spinner color=\"accent\" [diameter]=\"30\"></mat-spinner>\r\n                </mat-footer-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"noData\">\r\n                <mat-footer-cell *matFooterCellDef colspan=\"5\">\r\n                    No Companies to show!\r\n                </mat-footer-cell>\r\n            </ng-container>\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n            <mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide':dataSource!=null}\"></mat-footer-row>\r\n            <mat-footer-row *matFooterRowDef=\"['noData']\"\r\n                [ngClass]=\"{'hide': !(dataSource !=null && dataSource.data.length == 0)}\"></mat-footer-row>\r\n        </mat-table>\r\n        <mat-paginator [pageSizeOptions]=\"[5,10,20,100]\" [pageSize]=\"10\"></mat-paginator>\r\n    </section>\r\n</div>","import { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CompanyService } from 'src/app/services/company.service';\r\nimport { CustomerService } from 'src/app/services/customer.service';\r\nimport { Company } from './../../models/company';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-companyhome',\r\n  templateUrl: './companyhome.component.html',\r\n  styleUrls: ['./companyhome.component.css']\r\n})\r\nexport class CompanyhomeComponent implements OnInit {\r\n  company : Company;\r\n  constructor(private companyService : CompanyService, private snackBar : MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.companyService.getCompanyDetails().subscribe(\r\n      success =>{\r\n        this.company = Company.getCompany(success);\r\n      },\r\n      error => {\r\n          let errorMessage = error.error;\r\n          if(error.status == 0 || error.status == 500){\r\n            errorMessage = \"Oops, something went wrong\";\r\n          }\r\n          this.snackBar.open(errorMessage,null,{duration: 2000});\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"container\" *ngIf=\"company\">\r\n    <div class=\"header\">\r\n        <h1>Welcome {{company._name}}</h1>\r\n    </div>\r\n</div>","import { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CompanyService } from 'src/app/services/company.service';\r\nimport { Company } from 'src/app/models/company';\r\nimport { Coupon } from 'src/app/models/coupon';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialogConfig, MatDialog } from '@angular/material/dialog';\r\nimport { AddcouponComponent } from '../addcoupon/addcoupon.component';\r\nimport { Customer } from 'src/app/models/customer';\r\n\r\n@Component({\r\n  selector: 'app-companyprofile',\r\n  templateUrl: './companyprofile.component.html',\r\n  styleUrls: ['./companyprofile.component.css']\r\n})\r\nexport class CompanyprofileComponent implements OnInit {\r\n  company: Company;\r\n  coupons: Coupon[];\r\n  clients: Customer[];\r\n  search: string;\r\n  searchOption = \"Regular Search\";\r\n  dataSource;\r\n  displayedColumns: string[] = [\"image\", \"title\", \"category\", \"endDate\", \"originalAmount\", \"bought\", \"price\", \"actions\"]\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  constructor(private companyService: CompanyService, private dialog: MatDialog, private snackBar: MatSnackBar\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.companyService.getCompanyDetails().subscribe(\r\n      success => {\r\n        this.company = Company.getCompany(success);\r\n        this.coupons = Coupon.getCoupons(this.company._coupons);\r\n        this.dataSource = new MatTableDataSource(this.coupons);\r\n        this.dataSource.filterPredicate = (data, filter) => {\r\n          if (this.searchOption == \"By Category\") {\r\n            return data._category.toString().toLowerCase().indexOf(filter) != -1;\r\n          } else if (this.searchOption == \"By Max Price\") {\r\n            return data._price <= +filter;\r\n          } else {\r\n            return this.displayedColumns.some(element => {\r\n              return (element != \"image\" && element != \"actions\") && (data[element].toString().toLowerCase().indexOf(filter) != -1);\r\n            });\r\n          }\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.companyService.getAllClients().subscribe(\r\n          success => {\r\n            this.clients = Customer.getCustomers(success);\r\n\r\n          },\r\n          error => {\r\n            let errorMessage: string = error.error;\r\n            if (error.status == 0 || error.status == 500) {\r\n              errorMessage = \"Oops, try again later\";\r\n            }\r\n            const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n\r\n          }\r\n        )\r\n      },\r\n      error => {\r\n        let errorMessage: string = error.error;\r\n        if (error.status == 0 || error.status == 500) {\r\n          errorMessage = \"Oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    )\r\n  }\r\n  createCoupon() {\r\n    let config: MatDialogConfig = new MatDialogConfig();\r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"60%\";\r\n    const dialogRef = this.dialog.open(AddcouponComponent, config);\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n  editCoupon(coupon) {\r\n    let config: MatDialogConfig = new MatDialogConfig();\r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"60%\";\r\n    config.data = coupon;\r\n    const dialogRef = this.dialog.open(AddcouponComponent, config);\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n  filterSearch() {\r\n    this.dataSource.filter = this.search.trim().toLowerCase();\r\n  }\r\n  clearSearch() {\r\n    this.search = '';\r\n    this.filterSearch();\r\n  }\r\n  getAmountPurchases(coupon: Coupon) {\r\n\r\n    return this.clients?.filter(client => client._coupons.some(c => c._id == coupon._id)).length;\r\n  }\r\n}\r\n","<div class=\"container mat-elevation-z9\">\r\n    <h1>My Profile</h1>\r\n    <mat-tab-group animationDuration=\"0ms\">\r\n        <mat-tab label=\"My Info\">\r\n            <section class=\"info\">\r\n                <mat-toolbar color=\"accent\">\r\n\r\n                    <div class=\"info-header\">\r\n                        Company Information:\r\n                    </div>\r\n                </mat-toolbar>\r\n                <div class=\"info-line\">\r\n                   <label>Name:</label> <span> {{company?._name}} </span>\r\n                </div>\r\n                <div class=\"info-line\">\r\n                    <label>Email:</label> <span>{{company?._email}}</span>\r\n                </div>\r\n                <div class=\"info-line\">\r\n                    <label>Password:</label> <span>{{company?._password}}</span>\r\n                </div>\r\n            </section>\r\n        </mat-tab>\r\n        <mat-tab label=\"Coupons\">\r\n            <button mat-raised-button class=\"create\" (click)=\"createCoupon()\">Add Coupon</button>\r\n            <mat-form-field class=\"search\">\r\n                <mat-label>\r\n                    Search\r\n                </mat-label>\r\n                <input matInput placeholder=\"Search a coupon\" [(ngModel)]=\"search\" (keyup)=\"filterSearch()\" />\r\n                <button mat-icon-button matSuffix (click)=\"clearSearch()\"><mat-icon>cancel</mat-icon></button>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Search by</mat-label>\r\n                <mat-select [(value)]=\"searchOption\">\r\n                    <mat-option value=\"Regular Search\">Regular Search</mat-option>\r\n                    <mat-option value=\"By Category\">By Category</mat-option>\r\n                    <mat-option value=\"By Max Price\">By Max Price</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n                <ng-container matColumnDef=\"image\">\r\n                    <mat-header-cell *matHeaderCellDef>image</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        <img [src]=\"element._image\" [alt]=\"element._title\" width=\"90\" height=\"90\" [title]=\"element._title\" />\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"title\">\r\n                    <mat-header-cell *matHeaderCellDef>description</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._title}}<br>\r\n                        {{element._description}}\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"category\">\r\n                    <mat-header-cell *matHeaderCellDef>Category</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._category}}\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"endDate\">\r\n                    <mat-header-cell *matHeaderCellDef>Valid through</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._startDate}} to<br> \r\n                        {{element._endDate}}\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"originalAmount\">\r\n                    <mat-header-cell *matHeaderCellDef>Amount </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._currentAmount}} / {{element._originalAmount}}\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"bought\">\r\n                    <mat-header-cell *matHeaderCellDef>Amount of purchases</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._bought}}                        \r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"price\">\r\n                    <mat-header-cell *matHeaderCellDef>Price</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._price | currency: 'ILS'}}\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"actions\">\r\n                    <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        <button mat-icon-button (click)=\"editCoupon(element)\"><mat-icon>launch</mat-icon></button>\r\n                        \r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"loading\">\r\n                    <mat-footer-cell *matFooterCellDef colspan=\"5\">\r\n                        <mat-spinner color=\"accent\" [diameter]=\"30\"></mat-spinner>\r\n                    </mat-footer-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"noData\">\r\n                    <mat-footer-cell *matFooterCellDef colspan=\"5\">\r\n                        No Coupons to show!\r\n                    </mat-footer-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n                <mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide':dataSource!=null}\"></mat-footer-row>\r\n                <mat-footer-row *matFooterRowDef=\"['noData']\"\r\n                    [ngClass]=\"{'hide': !(dataSource !=null && dataSource.data.length == 0)}\"></mat-footer-row>\r\n            </mat-table>\r\n            <mat-paginator [pageSizeOptions]=\"[5,10,20,100]\" [pageSize]=\"5\"></mat-paginator>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</div>","import { LoginService } from 'src/app/services/login.service';\r\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { Coupon } from 'src/app/models/coupon';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CustomerService } from 'src/app/services/customer.service';\r\nimport { Customer } from 'src/app/models/customer';\r\n\r\n@Component({\r\n  selector: 'app-coupon',\r\n  templateUrl: './coupon.component.html',\r\n  styleUrls: ['./coupon.component.css']\r\n})\r\n\r\nexport class CouponComponent implements OnInit {\r\n  coupon: Coupon;\r\n  couponId: number;\r\n  disableBuyButton = false;\r\n  otherCustomers: Customer[];\r\n  otherCustomersCoupons: Coupon[];\r\n  recentlyViewedCoupons: Coupon[] = [];\r\n  purchaseAmount: number;\r\n\r\n  countDown;\r\n  constructor(private activeRoute: ActivatedRoute, private customerService: CustomerService,\r\n    private dialog: MatDialog, private snackBar: MatSnackBar, private router: Router, private loginService: LoginService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.couponId = this.activeRoute.snapshot.params['id'];\r\n    this.customerService.getCouponById(this.couponId).subscribe(\r\n      success => {\r\n        this.loginService.updateRecentlyViewed(this.couponId);\r\n        this.coupon = Coupon.getCoupon(success);\r\n        setInterval(() => {\r\n          this.countDown = this.remainingTime();\r\n        }, 1000);\r\n        this.customerService.getCustomersByCoupon(this.couponId).subscribe(\r\n          success => {\r\n            this.otherCustomers = Customer.getCustomers(success);\r\n            this.otherCustomersCoupons = this.otherCustomers.map(customer => customer._coupons).reduce((acc, curr) => acc.concat(curr));\r\n            this.otherCustomersCoupons = this.filterDuplicates(this.otherCustomersCoupons);\r\n            this.otherCustomersCoupons = this.otherCustomersCoupons.filter(coupon => this.sharedCoupon(this.otherCustomers, coupon)).sort(this.sortByBought).slice(0, 5);\r\n          },\r\n          error => {\r\n            let errorMessage: string = error.error;\r\n            if (error.status == 0 || error.status == 500) {\r\n              errorMessage = \"Oops, try again later\";\r\n            }\r\n            const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n          }\r\n        )\r\n      },\r\n      error => {\r\n        if (error.status == 400) {\r\n          this.router.navigateByUrl(\"/not-found\");\r\n          return;\r\n        }\r\n        let errorMessage: string = error.error;\r\n        if (error.status == 0 || error.status == 500) {\r\n          errorMessage = \"Oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    )\r\n    this.showRecentlyViewed();\r\n  }\r\n  showRecentlyViewed() {\r\n    let ids: number[] = this.loginService.getRecentlyViewed().map(id => +id);\r\n    ids.forEach(id => this.customerService.getCouponById(id).subscribe(\r\n      success => {\r\n        this.recentlyViewedCoupons.push(Coupon.getCoupon(success));\r\n      }, error => {\r\n        let errorMessage: string = error.error;\r\n        if (error.status == 0 || error.status == 500) {\r\n          errorMessage = \"Oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    ))\r\n\r\n\r\n  }\r\n  purchaseCoupon() {\r\n    this.disableBuyButton = true;\r\n    this.customerService.purchaseCoupon(this.coupon).subscribe(\r\n      success => {\r\n        const snackRef = this.snackBar.open(success, \"dismiss\");\r\n      },\r\n      error => {\r\n        let errorMessage: string = error.error;\r\n        if (error.status == 0 || error.status == 500) {\r\n          errorMessage = \"Oops, try again later!\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n        snackRef.onAction().subscribe(() => {\r\n          this.disableBuyButton = false;\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  sharedCoupon(customers: Customer[], coupon: Coupon): boolean {\r\n    if (customers.every(customer => customer._coupons.some(coup => coup._id == coupon._id))) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  sortByBought(a: Coupon, b: Coupon) {\r\n    return b._bought - a._bought;\r\n  }\r\n  filterDuplicates(coupons: Coupon[]) {\r\n    let newCoupons: Coupon[] = new Array<Coupon>();\r\n    let newCouponsId: number[] = [];\r\n    for (let coupon of coupons) {\r\n      if (!newCouponsId.includes(coupon._id)) {\r\n        newCoupons.push(coupon);\r\n        newCouponsId.push(coupon._id);\r\n      }\r\n    }\r\n    return newCoupons;\r\n  }\r\n\r\n  limitedTime() {\r\n    const endDate: Date = new Date(this.coupon?._endDate);\r\n    const now: Date = new Date();\r\n    return endDate.getTime() - now.getTime() <= 1000 * 60 * 60 * 72;\r\n  }\r\n  remainingTime() {\r\n    const timeLeftMillis = new Date(this.coupon?._endDate).getTime() - (new Date()).getTime();\r\n    let timeLeftSeconds = Math.floor(timeLeftMillis / 1000).toString();\r\n    let timeLeftHours = Math.floor(+timeLeftSeconds / 3600).toString();\r\n    let timeLeftMinutes = Math.floor((+timeLeftSeconds - (+timeLeftHours * 3600)) / 60).toString();\r\n    timeLeftSeconds = Math.floor(+timeLeftSeconds - (+timeLeftHours * 3600) - (+timeLeftMinutes * 60)).toString();\r\n    timeLeftHours = timeLeftHours.length == 1 ? \"0\" + timeLeftHours : timeLeftHours;\r\n    timeLeftMinutes = timeLeftMinutes.length == 1 ? \"0\" + timeLeftMinutes : timeLeftMinutes;\r\n    timeLeftSeconds = timeLeftSeconds.length == 1 ? \"0\" + timeLeftSeconds : timeLeftSeconds;\r\n    return timeLeftHours + \":\" + timeLeftMinutes + \":\" + timeLeftSeconds;\r\n  }\r\n}\r\n\r\n","<div class=\"container mat-elevation-z8\">\r\n    <div class=\"loading\" *ngIf=\"!coupon\">\r\n        <mat-spinner color=\"accent\" diameter=\"200\"></mat-spinner>\r\n    </div>\r\n    <div class=\"coupon-page\" *ngIf=\"coupon\">\r\n        <div class=\"coupon-card\">\r\n\r\n            <img [src]=\"coupon?._image\" [alt]=\"coupon?._title\" />\r\n            <div class=\"info\">\r\n                <div class=\"info-content\">\r\n\r\n                    <h1>{{coupon?._title}}</h1>\r\n                    <h3>{{coupon?._description}}</h3>\r\n                    <p>This coupon expires on {{coupon?._endDate}}, hurry!</p>\r\n                    <p>only {{coupon?._price | currency:'ILS'}}</p>\r\n                    <button mat-raised-button color=\"accent\" [disabled]=\"disableBuyButton\"\r\n                        (click)=\"purchaseCoupon()\">Buy\r\n                        NOW!</button>\r\n                    <p>{{purchaseAmount}} other people bought this coupon </p>\r\n                    <p class=\"count-down\" *ngIf=\"limitedTime()\">\r\n                        ONLY {{ countDown }} HOURS LEFT! HURRY!\r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n      \r\n        </div>\r\n        <hr>\r\n        <div class=\"additional\">\r\n            <p>People who bought {{coupon?._title}} Also enjoyed these:</p>\r\n            <div class=\"additional-coupons\">\r\n\r\n                <app-minicoupon *ngFor=\"let coupon of otherCustomersCoupons\" [boughtBy]=\"coupon._bought\"\r\n                    [coupon]=\"coupon\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"additional\" *ngIf=\"recentlyViewedCoupons\">\r\n            <p>You were recently interested in these coupons:</p>\r\n            <div class=\"additional-coupons\">\r\n\r\n                <app-minicoupon *ngFor=\"let coupon of recentlyViewedCoupons\" [boughtBy]=\"coupon._bought\"\r\n                    [coupon]=\"coupon\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CustomerService } from 'src/app/services/customer.service';\r\nimport { Category } from 'src/app/models/category.enum';\r\nimport { Coupon } from 'src/app/models/coupon';\r\nimport { Customer } from 'src/app/models/customer';\r\n\r\n@Component({\r\n  selector: 'app-couponbycategory',\r\n  templateUrl: './couponbycategory.component.html',\r\n  styleUrls: ['./couponbycategory.component.css']\r\n})\r\nexport class CouponbycategoryComponent implements OnInit {\r\n  category : Category;\r\n  categoryName : string;\r\n  coupons : Coupon[] = [];\r\n  constructor(private activeRoute : ActivatedRoute, private customerService : CustomerService, private snackBar : MatSnackBar) { }\r\n  toCategory(text) : Category{\r\n    return Category.Food;\r\n  }\r\n  ngOnInit(): void {\r\n    this.category = (<any>Category)[this.activeRoute.snapshot.params[\"category\"]];\r\n    this.categoryName = Category[this.category];\r\n    this.customerService.getAllCouponsByCategory(this.category).subscribe(\r\n      success =>{\r\n        this.coupons = Coupon.getCoupons(success).sort( (a:Coupon,b:Coupon)=>b._bought-a._bought);\r\n     \r\n      },\r\n      error => {\r\n        let errorMessage: string = error.error;\r\n            if (error.status == 0 || error.status == 500) {\r\n              errorMessage = \"Oops, try again later\";\r\n            }\r\n            const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <mat-toolbar color=\"accent\">\r\n        <h1>\r\n        {{categoryName}}\r\n     </h1>\r\n    </mat-toolbar>\r\n    <div class=\"category-coupons\">\r\n\r\n        <app-minicoupon *ngFor=\"let coupon of coupons\" [coupon]=\"coupon\" [boughtBy]=\"coupon._bought\"></app-minicoupon>\r\n    </div>\r\n</div>","import { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Coupon } from 'src/app/models/coupon';\r\nimport { CustomerService } from 'src/app/services/customer.service';\r\nimport { Customer } from 'src/app/models/customer';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, filter } from 'rxjs/operators';\r\nimport { Category } from 'src/app/models/category.enum';\r\n\r\n@Component({\r\n  selector: 'app-customerhome',\r\n  templateUrl: './customerhome.component.html',\r\n  styleUrls: ['./customerhome.component.css']\r\n})\r\nexport class CustomerhomeComponent implements OnInit {\r\n  coupons: Coupon[];\r\n  numbers: number[] = [1,2,3];\r\n  autoComplete : FormControl = new FormControl();\r\n  searchOption = \"All\";\r\n  categories : string[] = Object.keys(Category).filter( category => isNaN(+category) );\r\n  optionsB : Coupon[];\r\n  \r\n  limitedTimeCoupons: Coupon[] = [];\r\n  topPicksCoupons: Coupon[] = [];\r\n  topPicksQualifier = 2;\r\n  foodCoupons : Coupon[];\r\n  electricityCoupons : Coupon[];\r\n  fashionCoupons : Coupon[];\r\n  petsCoupons : Coupon[];\r\n  tourismCoupons : Coupon[];\r\n  furnitureCoupons : Coupon[]\r\n  spaCoupons : Coupon[];\r\n\r\n  constructor(private customerService: CustomerService, private snackBar : MatSnackBar) { }\r\n\r\n  display(coupon :Coupon) : string{\r\n    return coupon && coupon._title ? coupon._title : '';\r\n  }\r\n  clearSearch(){\r\n    this.autoComplete.setValue('');\r\n    this.optionsB = null;\r\n  }\r\n  \r\n \r\n  searchListener(){\r\n    if(this.autoComplete.value.length >=3)\r\n      this.optionsB = this.coupons.filter( coupon =>  coupon._title.toLowerCase().includes(this.autoComplete.value)\r\n                                          && (this.searchOption != \"All\" ? coupon._category.toString() == this.searchOption : true)).slice(0,6);\r\n    if(this.autoComplete.value.length < 3)\r\n      this.optionsB = null;\r\n\r\n  }\r\n  sortByBought(a : Coupon, b : Coupon){\r\n    return b._bought - a._bought;\r\n  }\r\n  sortByLimitedTime(a : Coupon, b:Coupon){\r\n    return (new Date(a._endDate)).getTime() - (new Date(b._endDate)).getTime()\r\n  }\r\n  ngOnInit(): void {\r\n    this.customerService.getAllCoupons().subscribe(\r\n      success => {\r\n        this.coupons = Coupon.getCoupons(success).sort(this.sortByBought);\r\n        \r\n        this.topPicksCoupons = this.coupons.slice(0,5);\r\n        this.electricityCoupons = this.coupons.filter( coupon => coupon._category.toString() == \"Electricity\" ).sort( this.sortByBought ).slice(0,5);\r\n        this.foodCoupons = this.coupons.filter( coupon => coupon._category.toString() == \"Food\" ).slice(0,5);\r\n        this.spaCoupons = this.coupons.filter( coupon => coupon._category.toString() == \"Spa\" ).slice(0,5);\r\n        this.petsCoupons = this.coupons.filter( coupon => coupon._category.toString() == \"Pets\" ).slice(0,5);\r\n        this.tourismCoupons = this.coupons.filter( coupon => coupon._category.toString() == \"Tourism\" ).slice(0,5);\r\n        this.furnitureCoupons = this.coupons.filter( coupon => coupon._category.toString() == \"Furniture\" ).slice(0,5);\r\n        this.fashionCoupons = this.coupons.filter( coupon => coupon._category.toString() == \"Fashion\" ).slice(0,5);\r\n\r\n        this.limitedTimeCoupons = this.coupons.filter(this.limitedTime).sort(this.sortByLimitedTime).slice(0,3);\r\n        \r\n      }, error => {\r\n        let errorMessage: string = error.error;\r\n        if (error.status == 0 || error.status == 500) {\r\n          errorMessage = \"Oops, try again later\";\r\n        }\r\n        const snackRef = this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    );\r\n  }\r\n\r\n  limitedTime(coupon: Coupon) {\r\n    const endDate: Date = new Date(coupon._endDate);\r\n    const today: Date = new Date();\r\n    if (endDate.getTime() - today.getTime() <= 1000 * 60 * 60 * 72) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"overlay\" *ngIf=\"autoComplete.value\" (click)=\"clearSearch()\"></div>\r\n    <div>\r\n        <mat-toolbar color=\"accent\"><span class=\"categories\">\r\n            <a mat-button [routerLink]=\"['/category/',category]\" *ngFor=\"let category of categories\">{{category}}</a></span></mat-toolbar>\r\n        <div class=\"search-box\">\r\n            <mat-form-field class=\"search\" color=\"primary\">\r\n                <mat-label>Search coupon</mat-label>\r\n                <mat-spinner matPrefix *ngIf=\"autoComplete.value?.length > 0 && autoComplete.value?.length < 3\" [diameter]=\"30\" color=\"primary\"></mat-spinner>\r\n                <input type=\"search\" matInput (input)=\"searchListener()\" [formControl]=\"autoComplete\" />\r\n                <button mat-icon-button matSuffix *ngIf=\"autoComplete.value\" (click)=\"clearSearch()\">\r\n                    <mat-icon>cancel</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"search-by\">\r\n                <mat-label>Search by</mat-label>\r\n                <mat-select [(value)]=\"searchOption\">\r\n                    <mat-option value=\"All\">All</mat-option>\r\n                    <mat-option *ngFor=\"let category of categories\" [value]=\"category\">{{category}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"search-coupons offers mat-elevation-z8\" *ngIf=\"autoComplete.value\">\r\n            <app-minicoupon *ngFor=\"let coupon of optionsB\" [coupon]=\"coupon\" [search]=\"true\">\r\n            </app-minicoupon>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <br>\r\n    <br>\r\n    <div>\r\n\r\n        <div class=\"limited-time mat-elevation-z8\">\r\n            <h2>Limited Time Coupons - DONT MISS OUT</h2>\r\n            <div class=\"limited-time-coupons offers\">\r\n\r\n                <app-minicoupon *ngFor=\"let coupon of limitedTimeCoupons\" [coupon]=\"coupon\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"top-picks mat-elevation-z8\">\r\n            <h2>Customers Top Picks</h2>\r\n            <div class=\"top-picks-coupons offers\">\r\n                <app-minicoupon *ngFor=\"let coupon of topPicksCoupons\" [coupon]=\"coupon\"\r\n                    [boughtBy]=\"coupon._bought\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"elec mat-elevation-z8\">\r\n            <h2>Electricity</h2>\r\n            <div class=\"elec-coupons offers\">\r\n                <app-minicoupon *ngFor=\"let coupon of electricityCoupons\" [coupon]=\"coupon\"\r\n                    [boughtBy]=\"coupon._bought\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"fashion mat-elevation-z8\">\r\n            <h2>Fashion</h2>\r\n            <div class=\"fashion-coupons offers\">\r\n                <app-minicoupon *ngFor=\"let coupon of fashionCoupons\" [coupon]=\"coupon\"\r\n                    [boughtBy]=\"coupon._bought\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n        <div class=\"food mat-elevation-z8\">\r\n            <h2>Food</h2>\r\n            <div class=\"food-coupons offers\">\r\n                <app-minicoupon *ngFor=\"let coupon of foodCoupons\" [coupon]=\"coupon\"\r\n                    [boughtBy]=\"coupon._bought\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n        <div class=\"pets mat-elevation-z8\">\r\n            <h2>Pets</h2>\r\n            <div class=\"pets-coupons offers\">\r\n                <app-minicoupon *ngFor=\"let coupon of petsCoupons\" [coupon]=\"coupon\"\r\n                    [boughtBy]=\"coupon._bought\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n\r\n     \r\n        <div class=\"furniture mat-elevation-z8\">\r\n            <h2>Furniture</h2>\r\n            <div class=\"furniture-coupons offers\">\r\n                <app-minicoupon *ngFor=\"let coupon of furnitureCoupons\" [coupon]=\"coupon\"\r\n                    [boughtBy]=\"coupon._bought\"></app-minicoupon>\r\n            </div>\r\n        </div>\r\n        <div class=\"spa mat-elevation-z8\">\r\n            <h2>Spa</h2>\r\n            <div class=\"spa-coupons offers\">\r\n                <app-minicoupon *ngFor=\"let coupon of spaCoupons\" [coupon]=\"coupon\"\r\n                    [boughtBy]=\"coupon._bought\"></app-minicoupon>\r\n            </div>\r\n        </div> <br>\r\n      \r\n    </div>\r\n\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Customer } from 'src/app/models/customer';\r\nimport { CustomerService } from 'src/app/services/customer.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Coupon } from 'src/app/models/coupon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-customerprofile',\r\n  templateUrl: './customerprofile.component.html',\r\n  styleUrls: ['./customerprofile.component.css']\r\n})\r\nexport class CustomerprofileComponent implements OnInit {\r\n  customer : Customer;\r\n  coupons: Coupon[];\r\n  search : string;\r\n  searchOption = \"Regular Search\";\r\n  dataSource;\r\n  displayedColumns : string[] = [\"image\",\"title\",\"endDate\",\"price\"]\r\n  @ViewChild(MatPaginator) paginator : MatPaginator;\r\n  @ViewChild(MatSort) sort : MatSort;\r\n  constructor(private customerService : CustomerService, private snackBar : MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.customerService.getCustomerDetails().subscribe(\r\n      success =>{\r\n        this.customer = Customer.getCustomer(success);\r\n        this.coupons = Coupon.getCoupons(this.customer._coupons);\r\n        this.dataSource = new MatTableDataSource(this.coupons);\r\n        this.dataSource.filterPredicate = (data, filter) => {\r\n          if(this.searchOption == \"By Category\"){\r\n            return data._category.toString().toLowerCase().indexOf(filter) != -1;\r\n          }else if(this.searchOption == \"By Max Price\"){\r\n            return data._price <= +filter;\r\n          }else{\r\n            return this.displayedColumns.some( element =>{\r\n              return element != \"image\" && data[element].toString().toLowerCase().indexOf(filter) != -1\r\n            }); \r\n          }\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n      },\r\n      error =>{\r\n        if(error.status != 401){\r\n          let errorMessage = error.error;\r\n          if(error.status == 0 || error.status == 500){\r\n            errorMessage = \"Oops, something went wrong\";\r\n          }\r\n          this.snackBar.open(errorMessage,null,{duration: 2000});\r\n        }\r\n      }\r\n    )\r\n  }\r\n    filterSearch(){\r\n      this.dataSource.filter = this.search.trim().toLowerCase();\r\n    }\r\n    clearSearch(){\r\n      this.search = '';\r\n      this.filterSearch();\r\n    }\r\n\r\n}\r\n","<div class=\"container mat-elevation-z9\">\r\n    <h1>My Profile</h1>\r\n    <mat-tab-group animationDuration=\"0ms\">\r\n        <mat-tab label=\"My Info\">\r\n            <section class=\"info\">\r\n                <mat-toolbar color=\"accent\">\r\n\r\n                    <div class=\"info-header\">\r\n                        Personal Information:\r\n                    </div>\r\n                </mat-toolbar>\r\n                <div class=\"info-line\">\r\n                   <label>Full Name:</label> <span> {{customer?._firstName}} &nbsp; {{customer?._lastName}}</span>\r\n                </div>\r\n                <div class=\"info-line\">\r\n                    <label>Email:</label> <span>{{customer?._email}}</span>\r\n                </div>\r\n                <div class=\"info-line\">\r\n                    <label>Password:</label> <span>{{customer?._password}}</span>\r\n                </div>\r\n            </section>\r\n        </mat-tab>\r\n        <mat-tab label=\"My Coupons\">\r\n            <mat-form-field class=\"search\">\r\n                <mat-label>\r\n                    Search\r\n                </mat-label>\r\n                <input matInput placeholder=\"Search a coupon\" [(ngModel)]=\"search\" (keyup)=\"filterSearch()\" />\r\n                <button mat-icon-button matSuffix *ngIf=\"search\" (click)=\"clearSearch()\"><mat-icon>cancel</mat-icon></button>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field>\r\n                <mat-label>Search by</mat-label>\r\n                <mat-select [(value)]=\"searchOption\">\r\n                    <mat-option value=\"Regular Search\">Regular Search</mat-option>\r\n                    <mat-option value=\"By Category\">By Category</mat-option>\r\n                    <mat-option value=\"By Max Price\">By Max Price</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n                <ng-container matColumnDef=\"image\">\r\n                    <mat-header-cell *matHeaderCellDef>image</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        <img [src]=\"element._image\" [alt]=\"element._title\" width=\"90\" height=\"90\" [title]=\"element._title\" />\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"title\">\r\n                    <mat-header-cell *matHeaderCellDef colspan=\"2\">Title</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._title}} <br>\r\n                        {{element._description}} <br>\r\n                        {{element._category}}\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"endDate\">\r\n                    <mat-header-cell *matHeaderCellDef>Valid through</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._startDate}} &nbsp;to<br>\r\n                        {{element._endDate}}\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"price\">\r\n                    <mat-header-cell *matHeaderCellDef>Price</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                        {{element._price | currency:'ILS'}}\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"loading\">\r\n                    <mat-footer-cell *matFooterCellDef colspan=\"5\">\r\n                        <mat-spinner color=\"accent\" [diameter]=\"30\"></mat-spinner>\r\n                    </mat-footer-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"noData\">\r\n                    <mat-footer-cell *matFooterCellDef colspan=\"5\">\r\n                        No Coupons to show!\r\n                    </mat-footer-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n                <mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide':dataSource!=null}\"></mat-footer-row>\r\n                <mat-footer-row *matFooterRowDef=\"['noData']\"\r\n                    [ngClass]=\"{'hide': !(dataSource !=null && dataSource.data.length == 0)}\"></mat-footer-row>\r\n            </mat-table>\r\n            <mat-paginator [pageSizeOptions]=\"[5,10,20,100]\" [pageSize]=\"5\"></mat-paginator>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from 'src/app/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(public loginService : LoginService) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h1>Welcome to Couponara</h1>\r\n    <ng-container *ngIf=\"loginService.clientType?.toString() == 'Administrator'\">\r\n        <app-adminhome></app-adminhome>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"loginService.clientType?.toString() == 'Company'\">\r\n        <app-companyprofile></app-companyprofile>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"loginService.clientType?.toString() == 'Customer'\">\r\n        <app-customerhome></app-customerhome>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-loading',\r\n  templateUrl: './loading.component.html',\r\n  styleUrls: ['./loading.component.css']\r\n})\r\nexport class LoadingComponent implements OnInit {\r\n  \r\n  couponId;\r\n  constructor(private activeRoute : ActivatedRoute, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.couponId = this.activeRoute.snapshot.params[\"id\"];\r\n    this.router.navigateByUrl(\"/coupon/\"+this.couponId); \r\n  }\r\n\r\n}\r\n","<div class=\"container mat-elevation-z8\">\r\n    <mat-spinner color=\"accent\" [diameter]=\"60\"></mat-spinner>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ClientType } from 'src/app/services/client-type.enum';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm : FormGroup;\r\n  clientTypes = Object.keys(ClientType).filter( prop => isNaN(+prop));\r\n  visibility : string= \"visibility\";\r\n  type : string = \"password\";\r\n  constructor(private fb : FormBuilder, private loginService : LoginService, \r\n              private snackBar : MatSnackBar, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.loginForm = this.fb.group({\r\n      email : [\"\",[Validators.required,Validators.email]],\r\n      password : [\"\",[Validators.required]],\r\n      clientType: [\"\", [Validators.required]]\r\n    });\r\n\r\n  }\r\n  public login(){\r\n    this.loginService.login(this.email.value, this.password.value, this.clientType.value);\r\n  }\r\n  public showPassword(){\r\n    if(this.type == \"password\"){\r\n      this.type = \"text\";\r\n      this.visibility = \"visibility_off\";\r\n    }else{\r\n      this.type = \"password\";\r\n      this.visibility = \"visibility\";\r\n    }\r\n  }\r\n  get email(){\r\n    return this.loginForm.controls['email'];\r\n  }\r\n  get password(){\r\n    return this.loginForm.controls['password'];\r\n  }\r\n  get clientType(){\r\n    return this.loginForm.controls['clientType'];\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"form-card mat-elevation-z8\">\r\n        <mat-toolbar color=\"accent\">\r\n            <h2>Login</h2>\r\n        </mat-toolbar>\r\n        <form [formGroup]=\"loginForm\">\r\n            <mat-form-field>\r\n                <mat-label>Email</mat-label>\r\n                <input matInput type=\"email\" placeholder=\"e.g. John@gmail.com\" formControlName=\"email\" />\r\n                <mat-error *ngIf=\"email.errors?.required\">Email is required</mat-error>\r\n                <mat-error *ngIf=\"email.errors?.email\">Invalid email</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Password</mat-label>\r\n                <input matInput [type]=\"type\" placeholder=\"your password\" formControlName=\"password\" />\r\n                <button mat-icon-button matSuffix (click)=\"showPassword()\"><mat-icon>{{visibility}}</mat-icon></button>\r\n                <mat-error>Password is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Client Type</mat-label>\r\n                <mat-select formControlName=\"clientType\">\r\n                    <mat-option *ngFor=\"let t of clientTypes\" [value]=\"t\">{{t}}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"clientType.errors?.required\">Client Type is required</mat-error>\r\n            </mat-form-field>\r\n            <button mat-raised-button [disabled]=\"!loginForm.valid\" (click)=\"login()\">Login</button>\r\n            <button mat-raised-button>forgot my password</button>\r\n        </form>\r\n    </div>\r\n    </div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Coupon } from 'src/app/models/coupon';\r\nimport { CustomerService } from 'src/app/services/customer.service';\r\nimport { Customer } from 'src/app/models/customer';\r\nimport { Router } from '@angular/router';\r\nimport { CouponComponent } from '../coupon/coupon.component';\r\n\r\n@Component({\r\n  selector: 'app-minicoupon',\r\n  templateUrl: './minicoupon.component.html',\r\n  styleUrls: ['./minicoupon.component.css']\r\n})\r\nexport class MinicouponComponent implements OnInit {\r\n\r\n  @Input()\r\n  coupon : Coupon;\r\n  @Input()\r\n  boughtBy;\r\n  @Input()\r\n  search;\r\n  imgPlaceHolder= \"assets/product-placeholder.png\";\r\n  constructor(private customerService : CustomerService, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.coupon){\r\n      this.imgPlaceHolder = this.coupon._image;\r\n    }\r\n    if(!this.boughtBy && this.coupon){\r\n      this.customerService.getCustomersByCoupon(this.coupon._id).subscribe(\r\n        success => {\r\n          this.boughtBy = Customer.getCustomers(success).length;\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div *ngIf=\"!coupon\">\r\n        <mat-spinner color=\"accent\" [diameter]=\"60\"></mat-spinner>\r\n    </div>\r\n    <div class=\"search\" *ngIf=\"search && coupon\">\r\n\r\n        <a [routerLink]=\"['/loading/',coupon._id]\">\r\n            <img [src]=\"imgPlaceHolder\" alt=\"\" />\r\n        </a>\r\n\r\n        {{coupon._title}}\r\n        <p>\r\n            {{coupon._description}}\r\n        </p>\r\n        {{boughtBy}} people bought this!\r\n\r\n    </div>\r\n    <div *ngIf=\"!search && coupon\">\r\n\r\n        <a [routerLink]=\"['/loading/',coupon._id]\">\r\n            <img [src]=\"imgPlaceHolder\" alt=\"\" />\r\n\r\n        </a>\r\n        <div class=\"coupon-info\">\r\n            {{coupon._title}}\r\n            <span class=\"price\">\r\n                {{coupon._price | currency:'ILS' }}\r\n            </span><br>\r\n            <a [routerLink]=\"['/category/',coupon._category]\">{{coupon._category}}</a>\r\n            <span class=\"bought\">\r\n                {{boughtBy}} bought this\r\n\r\n            </span>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { ClientType } from 'src/app/services/client-type.enum';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { AddcompanyComponent } from '../addcompany/addcompany.component';\r\nimport { AddcustomerComponent } from '../addcustomer/addcustomer.component';\r\nimport { AddcouponComponent } from '../addcoupon/addcoupon.component';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  \r\n  constructor(public router : Router, public loginService : LoginService, private dialog : MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    const t : ClientType = ClientType.Administrator;\r\n    \r\n  }\r\n  goHome(){\r\n    if(this.loginService.clientType == \"Company\"){\r\n      this.router.navigateByUrl(\"/company-profile\")\r\n    }else{\r\n      this.router.navigateByUrl(\"/home\")\r\n    }\r\n  }\r\n  createCompany(){\r\n    let config : MatDialogConfig  = new MatDialogConfig();\r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"40%\";\r\n    this.dialog.open(AddcompanyComponent, config);\r\n  }\r\n  createCustomer(){\r\n    let config : MatDialogConfig  = new MatDialogConfig();\r\n   \r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"40%\";\r\n    this.dialog.open(AddcustomerComponent, config);\r\n  }\r\n  createCoupon(){\r\n    let config : MatDialogConfig = new MatDialogConfig();\r\n    config.autoFocus = true;\r\n    config.disableClose = true;\r\n    config.width = \"60%\";\r\n    this.dialog.open(AddcouponComponent, config);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <mat-toolbar color=\"primary\">\r\n        <span class=\"logo\" (click)=\"goHome()\">\r\n            <img src='assets/logo2.png' alt='alt' />\r\n        </span>\r\n        <!-- <span>\r\n        {{loginService.authenticated}}\r\n    </span>&nbsp;<span> \r\n        {{loginService.clientType?.toString() || 'no client type'}}\r\n    </span> -->\r\n        <span class=\"fill-toolbar\"></span>\r\n        \r\n        <div class=\"actions\">\r\n            <mat-spinner color=\"accent\" *ngIf=\"!loginService.authenticated; else logout\" [diameter]=\"30\"></mat-spinner>\r\n            <ng-template #logout>\r\n                \r\n                \r\n                <button mat-icon-button *ngIf=\"loginService.authenticated == 2\" [matMenuTriggerFor]=\"myMenu\" ><mat-icon>account_circle</mat-icon></button>\r\n                <mat-menu #myMenu=\"matMenu\">\r\n                    \r\n                    <ng-container *ngIf=\"loginService.clientType?.toString() == 'Administrator'\">\r\n                        <button mat-menu-item (click)=\"createCompany()\">New Company</button>\r\n                        <button mat-menu-item routerLink=\"all-companies\">All Companies</button>\r\n                        <button mat-menu-item (click)=\"createCustomer()\">New Customer</button>\r\n                        <button mat-menu-item routerLink=\"all-customers\">All Customers</button>\r\n                    </ng-container>\r\n                    \r\n                    <!-- <ng-container *ngIf=\"loginService.clientType?.toString() == 'Company'\">\r\n                        <button mat-menu-item routerLink=\"company-profile\">My Profile</button>\r\n                    </ng-container> -->\r\n                    <ng-container *ngIf=\"loginService.clientType?.toString() == 'Customer'\">\r\n                        <button mat-menu-item routerLink=\"customer-profile\">My Profile</button>\r\n                    </ng-container>\r\n                    <button mat-menu-item (click)=\"loginService.logout()\">Logout</button>\r\n                    \r\n\r\n                </mat-menu>\r\n            </ng-template>\r\n\r\n        </div>\r\n    </mat-toolbar>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pagenotfound',\r\n  templateUrl: './pagenotfound.component.html',\r\n  styleUrls: ['./pagenotfound.component.css']\r\n})\r\nexport class PagenotfoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"error mat-elevation-z8\">\r\n\r\n        <h1>404</h1>\r\n        <p>\r\n            Oops, we couldnt find what you were looking for.\r\n        </p>\r\n    </div>\r\n</div>","export enum Category {\r\n    Food, Electricity, Fashion, Pets, Tourism, Furniture, Spa\r\n    \r\n   \r\n}\r\n","import { Coupon } from './coupon';\r\n\r\nexport class Company {\r\n    constructor(private id : number,\r\n                private name : string,\r\n                private email : string,\r\n                private password : string,\r\n                private coupons? : Coupon[]\r\n        ){}\r\n    get _id() : number{\r\n        return this.id;\r\n    }\r\n    set _id(id : number){\r\n        this.id = id;\r\n    }\r\n    get _name() : string{\r\n        return this.name;\r\n    }\r\n    set _name(name :string){\r\n        this.name = name;\r\n    }\r\n    get _email() : string{\r\n        return this.email;\r\n    }\r\n    set _email(email : string){\r\n        this.email = email;\r\n    }\r\n    get _password() : string{\r\n        return this.password;\r\n    }\r\n    set _password(password : string) {\r\n        this.password = password;\r\n    }\r\n    get _coupons(): Coupon[]{\r\n        let coupons : Coupon[] = new Array<Coupon>();\r\n        if(this.coupons)\r\n            coupons = this.coupons;\r\n        return coupons;\r\n\r\n    }\r\n    public static getCompany(obj : Company) : Company{\r\n        let company : Company = new Company(0,\"\",\"\",\"\",[]);\r\n        return Object.assign(company,obj);\r\n    }\r\n    public static getCompanies(obj : Company[]) : Company[]{\r\n        let companies : Company[] = new Array<Company>();\r\n        for(let c of obj){\r\n            companies.push(this.getCompany(c));\r\n        }\r\n        return companies;\r\n    }\r\n}\r\n","import { Category } from './category.enum';\r\n\r\nexport class Coupon {\r\n    private bought : number;\r\n    constructor( private id : number,\r\n                 private companyId : number,\r\n                 private category : Category,\r\n                 private title : string,\r\n                 private description : string,\r\n                 private startDate : Date,\r\n                 private endDate : Date,\r\n                 private originalAmount :  number,\r\n                 private currentAmount : number,\r\n                 private price : number,\r\n                 private image : string\r\n        ){\r\n            this.bought = originalAmount - currentAmount;\r\n        }\r\n    get _id() : number{\r\n        return this.id;\r\n    }\r\n    set _id(id : number) {\r\n        this.id = id;\r\n    }\r\n    get _category(){\r\n        return this.category;\r\n    }\r\n    set _category(category : Category){\r\n        this.category = category;\r\n    }\r\n    get _companyId() : number{\r\n        return this.companyId;\r\n    }\r\n    set _companyId(companyId : number) {\r\n        this.companyId = companyId;\r\n    }\r\n\r\n    get _title() : string{\r\n        return this.title;\r\n    }\r\n    set _title(title : string){\r\n        this.title = title;\r\n    }\r\n    get _description() : string {\r\n        return this.description;\r\n    }\r\n    set _description(description : string){\r\n        this.description = description;\r\n    }\r\n    get _startDate() : Date{\r\n        return this.startDate;\r\n    }\r\n    set _startDate(startDate : Date){\r\n        this.startDate = startDate;\r\n    }\r\n    get _endDate() : Date{\r\n        return this.endDate;\r\n    }\r\n    set _endDate(endDate : Date){\r\n        this.endDate = endDate;\r\n    }\r\n    get _originalAmount() : number{\r\n        return this.originalAmount;\r\n    }\r\n    set _originalAmount(originalAmount : number) {\r\n        this.originalAmount = originalAmount;\r\n    }\r\n    get _currentAmount() : number{\r\n        return this.currentAmount;\r\n    }\r\n    set _currentAmount(currentAmount : number){\r\n        this.currentAmount = currentAmount;\r\n    }\r\n    get _bought() : number{\r\n        return this.bought;\r\n    }\r\n    get _price() : number{\r\n        return this.price;\r\n    }\r\n    set _price(price : number){\r\n        this.price = price;\r\n    }\r\n    get _image() : string{\r\n        return this.image;\r\n    }\r\n    set _image(image :string){\r\n        this.image = image;\r\n    }\r\n    public static getCoupon(obj : Coupon){\r\n        let coupon : Coupon = new Coupon(obj.id,obj.companyId,obj.category,obj.title,\r\n                                         obj.description,obj.startDate,obj.endDate,\r\n                                         obj.originalAmount,obj.currentAmount,obj.price,obj.image);\r\n\r\n        return coupon;\r\n    }\r\n    public static getCoupons(obj : Coupon[]){\r\n        let coupons : Coupon[] = new Array<Coupon>();\r\n        for(let c of obj){\r\n            coupons.push(this.getCoupon(c));\r\n        }\r\n        return coupons;\r\n    }\r\n\r\n}\r\n","import { Coupon } from './coupon';\r\n\r\nexport class Customer {\r\n    constructor( private id : number,\r\n                 private firstName : string,\r\n                 private lastName : string,\r\n                 private email : string,\r\n                 private password : string,\r\n                 private coupons? : Coupon[]\r\n        ){}\r\n\r\n    get _id() : number{\r\n        return this.id;\r\n    }\r\n    set _id(id : number){\r\n        this.id = id;\r\n    }\r\n    get _firstName() : string {\r\n        return this.firstName;\r\n    }\r\n    set _firstName(firstName : string){\r\n        this.firstName = firstName;\r\n    }\r\n    get _lastName() : string{\r\n        return this.lastName;\r\n    }\r\n    set _lastName(lastName : string){\r\n        this.lastName = lastName;\r\n    }\r\n    get _email() : string{\r\n        return this.email;\r\n    }\r\n    set _email(email : string){\r\n        this.email = email;\r\n    }\r\n    get _password() : string{\r\n        return this.password;\r\n    }\r\n    set _password(password : string){\r\n        this.password = password;\r\n    }\r\n    get _coupons() : Coupon[]{\r\n        let coupons : Coupon[] = new Array<Coupon>();\r\n        if(this.coupons)\r\n            coupons = this.coupons;\r\n        return coupons;\r\n    }\r\n    set _coupons(coupons : Coupon[]){\r\n        this.coupons = coupons;\r\n    }\r\n\r\n    public static getCustomer(obj : Customer){\r\n        let customer : Customer = new Customer(obj.id,obj.firstName,obj.lastName,obj.email,obj.password,[]);\r\n        customer._coupons = Coupon.getCoupons(obj.coupons);\r\n        return customer;\r\n    }\r\n    public static getCustomers(obj : Customer[]){\r\n        let customers : Customer[] = new Array<Customer>();\r\n        for(let c of obj){\r\n            customers.push(this.getCustomer(c))\r\n        }\r\n        return customers;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Company } from '../models/company';\r\nimport { LoginService } from './login.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Customer } from '../models/customer';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  path = \"/admin\"\r\n  constructor(private client : HttpClient, private loginService : LoginService) { }\r\n  public addCompany( company : Company){\r\n    const path : string = this.path + \"/add-company/\" + this.loginService.token;\r\n    return this.client.post(path, company);\r\n  }\r\n  public updateCompany( company : Company){\r\n    const path : string = this.path + \"/update-company/\" + this.loginService.token;\r\n    return this.client.post(path, company);\r\n  }\r\n  public deleteCompany( id: number ){\r\n    let path : string = this.path + \"/delete-company/\" + this.loginService.token;\r\n    path += \"/\"+id;\r\n    return this.client.delete(path,{responseType:\"text\"});\r\n  }\r\n\r\n  public getAllCompanies() : Observable<Company[]>{\r\n    const path : string = this.path + \"/get-all-companies/\" + this.loginService.token;\r\n    return this.client.get<Company[]>(path);\r\n  }\r\n  public addCustomer( customer : Customer){\r\n    const path : string = this.path + \"/add-customer/\" + this.loginService.token;\r\n    return this.client.post(path, customer);\r\n  }\r\n  public updateCustomer( customer : Customer){\r\n    const path : string = this.path + \"/update-customer/\" + this.loginService.token;\r\n    return this.client.post(path, customer);\r\n  }\r\n  public deleteCustomer( id: number ){\r\n    let path : string = this.path + \"/delete-customer/\" + this.loginService.token;\r\n    path += \"/\"+id;\r\n    return this.client.delete(path,{responseType:\"text\"});\r\n  }\r\n\r\n  public getAllCustomers() : Observable<Customer[]>{\r\n    const path : string = this.path + \"/get-all-customers/\" + this.loginService.token;\r\n    return this.client.get<Customer[]>(path);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Category } from '../models/category.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryGuard implements CanActivate {\r\n  constructor(private router : Router){}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    let enteredCategory = next.params['category'];\r\n    let validCategories : string[] = Object.keys(Category).filter(category=>isNaN(+category));\r\n    if(!validCategories.includes(enteredCategory)){\r\n      this.router.navigateByUrl(\"/not-found\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n}\r\n","export enum ClientType {\r\n    Administrator=\"Administrator\", Company=\"Company\", Customer=\"Customer\"\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LoginService } from './login.service';\r\nimport { Company } from '../models/company';\r\nimport { Coupon } from '../models/coupon';\r\nimport { Customer } from '../models/customer';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompanyService {\r\n  path = \"/company\"\r\n  constructor(private client : HttpClient, private loginService : LoginService) { }\r\n  public getCompanyDetails() {\r\n    const path : string = this.path + \"/company-details/\" + this.loginService.token;\r\n    return this.client.get<Company>(path);\r\n  }\r\n  public addCoupon(coupon : Coupon){\r\n    const path = this.path + \"/add-coupon/\" + this.loginService.token;\r\n    return this.client.post<Coupon>(path, coupon);\r\n  }\r\n  public updateCoupon(coupon : Coupon){\r\n    const path = this.path + \"/update-coupon/\" + this.loginService.token;\r\n    return this.client.post<Coupon>(path, coupon);\r\n  }\r\n  public deleteCoupon(id : number){\r\n    let path = this.path + \"/delete-coupon/\" + this.loginService.token;\r\n    path += \"/\"+id;\r\n    return this.client.delete(path,{responseType:\"text\"});\r\n  }\r\n  public getAllClients(){\r\n    const path = this.path + \"/all-clients/\" + this.loginService.token;\r\n    return this.client.get<Customer[]>(path);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LoginService } from './login.service';\r\nimport { Customer } from '../models/customer';\r\nimport { Coupon } from '../models/coupon';\r\nimport { Category } from '../models/category.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n  path = \"/customer\"\r\n  constructor(private client : HttpClient, private loginService : LoginService) { }\r\n  public getCustomerDetails(){\r\n    const path : string = this.path + \"/customer-details/\" + this.loginService.token;\r\n    return this.client.get<Customer>(path);\r\n  }\r\n\r\n  public getCouponById(id : number){\r\n    let path = this.path + \"/coupon-by-id/\" + this.loginService.token;\r\n    path += \"/\" + id;\r\n    return this.client.get<Coupon>(path);\r\n  }\r\n  public getCustomersByCoupon(id : number){\r\n    let path = this.path + \"/customers-by-coupon/\" + this.loginService.token;\r\n    path += \"/\" + id;\r\n    return this.client.get<Customer[]>(path);\r\n  }\r\n  public getAllCoupons(){\r\n    let path = this.path + \"/all-coupons/\" + this.loginService.token;\r\n    return this.client.get<Coupon[]>(path);\r\n  }\r\n  public getAllCouponsByCategory(category : Category){\r\n    let path = this.path + \"/coupons-by-category/\" + this.loginService.token;\r\n    return this.client.post<Coupon[]>(path, category);\r\n  }\r\n  public purchaseCoupon(coupon : Coupon){\r\n    let path = this.path + \"/purchase-coupon/\" + this.loginService.token;\r\n    return this.client.post(path, coupon, {responseType: \"text\"});\r\n  }\r\n}\r\n","import { Coupon } from 'src/app/models/coupon';\r\nimport { Injectable } from '@angular/core';\r\nimport {  HttpClient } from '@angular/common/http';\r\nimport { ClientType } from './client-type.enum';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Customer } from '../models/customer';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  path = \"/login\";\r\n  authenticated = 0;\r\n  clientType : string;\r\n  recentlyViewdIds: Set<number> = new Set();\r\n  constructor(private client : HttpClient, private snackBar : MatSnackBar, private router : Router) {\r\n    \r\n    this.loggedin();\r\n    this.recentlyViewdIds = new Set(JSON.parse(localStorage.getItem(\"last-viewed\")));\r\n   }\r\n  get token() : string{\r\n    return sessionStorage.getItem(\"token\") || \"guest\";\r\n  }\r\n  saveRecentlyViewed(){\r\n\r\n    localStorage.setItem(\"last-viewed\",JSON.stringify([...this.recentlyViewdIds]))\r\n  }\r\n  updateRecentlyViewed(id:number){\r\n    if(this.recentlyViewdIds.size >=5){\r\n      let temp = [...this.recentlyViewdIds];\r\n      temp.shift();\r\n      this.recentlyViewdIds = new Set( temp);\r\n    }\r\n    this.recentlyViewdIds.add(id);\r\n    this.saveRecentlyViewed();\r\n  }\r\n  getRecentlyViewed() {\r\n    return JSON.parse(localStorage.getItem(\"last-viewed\")) || [];\r\n  }\r\n  public login(email : string, password : string,clientType :  ClientType){\r\n    const path = this.path +\"/\"+ email +\"/\"+password+\"/\"+clientType;\r\n    \r\n    this.client.post(path, null,{responseType:\"text\"}).subscribe(\r\n      success =>{\r\n        this.snackBar.open(\"Login successfull\",null, {duration : 3000});\r\n        this.authenticated = 2;\r\n        this.clientType = clientType.toString();\r\n        sessionStorage.setItem(\"token\",success)\r\n        if(this.clientType == \"Company\"){\r\n          this.router.navigateByUrl(\"/company-profile\")\r\n        }else{\r\n          this.router.navigateByUrl(\"/home\");\r\n\r\n        }\r\n        \r\n      },\r\n      error=>{\r\n        let errorMessage = error.status == 0 ? \"Oops, Please try again later\" : error.error;\r\n      \r\n        this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    );\r\n  }\r\n  public logout() {\r\n    this.client.post(this.path + \"/logout/\" + sessionStorage.getItem(\"token\"), null, {responseType:\"text\"}).subscribe(\r\n      success => {\r\n        this.snackBar.open(success, null, {duration: 3000});\r\n        sessionStorage.setItem(\"token\",\"null\");\r\n        this.authenticated = 1;\r\n        this.clientType = null;\r\n        this.router.navigateByUrl(\"login\");\r\n      }, error =>{\r\n        let errorMessage = error.status == 0 ? \"Oops, try again later\" : error.error;\r\n        this.snackBar.open(errorMessage, \"dismiss\");\r\n      }\r\n    )\r\n  }\r\n  public loggedin(){\r\n    const token : string = sessionStorage.getItem(\"token\") || \"null\";\r\n    const path = this.path + \"/loggedin/\" + token;\r\n    \r\n    this.client.post(path, null).subscribe(\r\n      success => {\r\n        if(typeof success == 'object'){\r\n          if(success.hasOwnProperty('firstName')){\r\n            this.clientType = \"Customer\";\r\n          }else{\r\n            this.clientType = \"Company\";\r\n          }\r\n        }else{\r\n          this.clientType = \"Administrator\";\r\n        }\r\n        this.authenticated = 2;\r\n        \r\n       \r\n      }, \r\n      error => {\r\n        \r\n        this.authenticated = 1;\r\n        this.router.navigateByUrl(\"/login\");\r\n        \r\n        sessionStorage.setItem(\"token\",\"guest\");\r\n      }\r\n    );\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginguardService implements CanActivate{\r\n\r\n  constructor(private loginService : LoginService, private router :Router) { }\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | import(\"@angular/router\").UrlTree | import(\"rxjs\").Observable<boolean | import(\"@angular/router\").UrlTree> | Promise<boolean | import(\"@angular/router\").UrlTree> {\r\n    \r\n    const token = sessionStorage.getItem(\"token\") || \"guest\";\r\n    this.loginService.loggedin();\r\n    if(token == \"guest\" ){\r\n      this.router.navigateByUrl(\"/login\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}